{
  "address": "0x835e559D50dcB6a36Ed1ada60cf6143293Ecc02F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_softCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hardCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxContribution",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ContributionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RefundClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "successful",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalRaised",
          "type": "uint256"
        }
      ],
      "name": "SaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "SaleStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "UserWhitelisted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SALE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_users",
          "type": "address[]"
        }
      ],
      "name": "addMultipleToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokensAllocated",
          "type": "uint256"
        }
      ],
      "name": "calculateTokenAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizeSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        }
      ],
      "name": "getContributionInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_contribution",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isWhitelisted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_saleFinalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_saleSuccessful",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_totalRaised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4596067977d290d8ee9a6ea8b9312cf7a5a5ced6e18b738e0409ca2bb247dcdb",
  "receipt": {
    "to": null,
    "from": "0x1922d63490E4c8ad8F88D7023dFaE99609231d45",
    "contractAddress": "0x835e559D50dcB6a36Ed1ada60cf6143293Ecc02F",
    "transactionIndex": 103,
    "gasUsed": "2313051",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000004000000008000000000000000000000000000004000000000000000000000080000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x30933498e787910fe6206c58f712c31bfdd7df5985dc22ccc88754dd6baab9a3",
    "transactionHash": "0x4596067977d290d8ee9a6ea8b9312cf7a5a5ced6e18b738e0409ca2bb247dcdb",
    "logs": [
      {
        "transactionIndex": 103,
        "blockNumber": 35351825,
        "transactionHash": "0x4596067977d290d8ee9a6ea8b9312cf7a5a5ced6e18b738e0409ca2bb247dcdb",
        "address": "0x835e559D50dcB6a36Ed1ada60cf6143293Ecc02F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001922d63490e4c8ad8f88d7023dfae99609231d45"
        ],
        "data": "0x",
        "logIndex": 179,
        "blockHash": "0x30933498e787910fe6206c58f712c31bfdd7df5985dc22ccc88754dd6baab9a3"
      }
    ],
    "blockNumber": 35351825,
    "cumulativeGasUsed": "14433461",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
    "1000000",
    "10000000000",
    "69000000",
    "690000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "e530ed6c3a1964d3e69707e8ca8ecfa1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxContribution\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"successful\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRaised\",\"type\":\"uint256\"}],\"name\":\"SaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"SaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserWhitelisted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SALE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"}],\"name\":\"addMultipleToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokensAllocated\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_saleFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_saleSuccessful\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_totalRaised\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleSuccessful\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Presale contract for Backroom token with USDC contributions\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"addMultipleToWhitelist(address[])\":{\"details\":\"Add multiple users to whitelist (admin only)\"},\"calculateTokenAllocation(address,uint256)\":{\"details\":\"Calculate token allocation for a contributor (view only, for off-chain reference)\",\"params\":{\"_contributor\":\"Address to calculate for\",\"_totalTokensAllocated\":\"Total tokens allocated to presale (e.g., 5% of supply)\"}},\"claimRefund()\":{\"details\":\"Claim refund if sale failed (contributors only)\"},\"deposit(uint256)\":{\"details\":\"Contribute USDC to the presale\"},\"finalizeSale()\":{\"details\":\"Finalize the sale after 24 hours or when hard cap is reached\"},\"getContributionInfo(address)\":{\"details\":\"Get contribution info for an address\"},\"getSaleInfo()\":{\"details\":\"Get sale status information\"},\"getTimeRemaining()\":{\"details\":\"Get time remaining in sale\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startSale()\":{\"details\":\"Start the presale (admin only)\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds()\":{\"details\":\"Withdraw raised funds if sale was successful (admin only)\"}},\"title\":\"Presale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Presale.sol\":\"Presale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/Presale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\n/**\\n * @title Presale\\n * @dev Presale contract for Backroom token with USDC contributions\\n */\\ncontract Presale is Ownable, ReentrancyGuard {\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public immutable usdcToken;\\n\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public minContribution;\\n    uint256 public maxContribution;\\n\\n    uint256 public saleStartTime;\\n    uint256 public saleEndTime;\\n    uint256 public totalRaised;\\n    bool public saleFinalized; // Has sale been finalized\\n    bool public saleSuccessful; // Did sale meet soft cap\\n\\n    uint256 public constant SALE_DURATION = 24 hours;\\n\\n    mapping(address => uint256) public contributions; // USDC contributed per address\\n    mapping(address => bool) public whitelist; // Whitelisted addresses\\n\\n    event SaleStarted(uint256 startTime, uint256 endTime);\\n    event ContributionMade(address indexed contributor, uint256 amount);\\n    event SaleFinalized(bool successful, uint256 totalRaised);\\n    event RefundClaimed(address indexed contributor, uint256 amount);\\n    event FundsWithdrawn(uint256 amount);\\n    event UserWhitelisted(address indexed user);\\n\\n    modifier onlyDuringSale() {\\n        require(saleStartTime > 0, \\\"Sale not started\\\");\\n        require(block.timestamp >= saleStartTime, \\\"Sale not started\\\");\\n        require(block.timestamp <= saleEndTime, \\\"Sale ended\\\");\\n        require(totalRaised < hardCap, \\\"Hard cap reached\\\");\\n        _;\\n    }\\n\\n    modifier onlyAfterSale() {\\n        require(saleFinalized, \\\"Sale not finalized\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        address _usdcToken,\\n        uint256 _softCap,\\n        uint256 _hardCap,\\n        uint256 _minContribution,\\n        uint256 _maxContribution\\n    ) Ownable(msg.sender) {\\n        require(_usdcToken != address(0), \\\"USDC token address cannot be zero\\\");\\n        require(_softCap > 0, \\\"Soft cap must be > 0\\\");\\n        require(_hardCap > _softCap, \\\"Hard cap must be > soft cap\\\");\\n        require(_minContribution > 0, \\\"Min contribution must be > 0\\\");\\n        require(\\n            _maxContribution >= _minContribution,\\n            \\\"Max must be >= min contribution\\\"\\n        );\\n        require(\\n            _maxContribution <= _hardCap,\\n            \\\"Max contribution cannot exceed hard cap\\\"\\n        );\\n\\n        usdcToken = IERC20(_usdcToken);\\n        softCap = _softCap;\\n        hardCap = _hardCap;\\n        minContribution = _minContribution;\\n        maxContribution = _maxContribution;\\n    }\\n\\n    /**\\n     * @dev Add multiple users to whitelist (admin only)\\n     */\\n    function addMultipleToWhitelist(\\n        address[] calldata _users\\n    ) external onlyOwner {\\n        for (uint256 i = 0; i < _users.length; i++) {\\n            require(_users[i] != address(0), \\\"Invalid address\\\");\\n            whitelist[_users[i]] = true;\\n            emit UserWhitelisted(_users[i]);\\n        }\\n    }\\n\\n    /**\\n     * @dev Start the presale (admin only)\\n     */\\n    function startSale() external onlyOwner {\\n        require(\\n            block.timestamp > saleEndTime || saleStartTime == 0,\\n            \\\"Sale already active or finalized\\\"\\n        );\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n\\n        saleStartTime = block.timestamp;\\n        saleEndTime = block.timestamp + SALE_DURATION;\\n\\n        emit SaleStarted(saleStartTime, saleEndTime);\\n    }\\n\\n    /**\\n     * @dev Contribute USDC to the presale\\n     */\\n    function deposit(uint256 _amount) external onlyDuringSale nonReentrant {\\n        require(whitelist[msg.sender], \\\"Address not whitelisted\\\");\\n        require(_amount >= minContribution, \\\"Below minimum contribution\\\");\\n        require(contributions[msg.sender] == 0, \\\"Already contributed\\\");\\n        require(_amount <= maxContribution, \\\"Exceeds maximum contribution\\\");\\n        require(totalRaised + _amount <= hardCap, \\\"Would exceed hard cap\\\");\\n\\n        // Transfer USDC from user to this contract\\n        usdcToken.safeTransferFrom(msg.sender, address(this), _amount);\\n\\n        contributions[msg.sender] = _amount;\\n        totalRaised += _amount;\\n\\n        emit ContributionMade(msg.sender, _amount);\\n\\n        if (totalRaised >= hardCap) {\\n            _finalizeSale();\\n        }\\n    }\\n\\n    /**\\n     * @dev Finalize the sale after 24 hours or when hard cap is reached\\n     */\\n    function finalizeSale() external {\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n        require(\\n            block.timestamp > saleEndTime || totalRaised >= hardCap,\\n            \\\"Sale period not ended and hard cap not reached\\\"\\n        );\\n\\n        _finalizeSale();\\n    }\\n\\n    /**\\n     * @dev Internal function to finalize sale\\n     */\\n    function _finalizeSale() internal {\\n        saleFinalized = true;\\n        saleSuccessful = totalRaised >= softCap;\\n\\n        emit SaleFinalized(saleSuccessful, totalRaised);\\n    }\\n\\n    /**\\n     * @dev Claim refund if sale failed (contributors only)\\n     */\\n    function claimRefund() external onlyAfterSale nonReentrant {\\n        require(!saleSuccessful, \\\"Sale was successful, no refunds\\\");\\n\\n        uint256 refundAmount = contributions[msg.sender];\\n        require(refundAmount > 0, \\\"No contribution found\\\");\\n\\n        contributions[msg.sender] = 0;\\n\\n        usdcToken.safeTransfer(msg.sender, refundAmount);\\n\\n        emit RefundClaimed(msg.sender, refundAmount);\\n    }\\n\\n    /**\\n     * @dev Withdraw raised funds if sale was successful (admin only)\\n     */\\n    function withdrawFunds() external onlyOwner onlyAfterSale {\\n        require(saleSuccessful, \\\"Sale was not successful\\\");\\n\\n        uint256 amount = usdcToken.balanceOf(address(this));\\n        require(amount > 0, \\\"No funds to withdraw\\\");\\n\\n        usdcToken.safeTransfer(owner(), amount);\\n\\n        emit FundsWithdrawn(amount);\\n    }\\n    // ************************************\\n    // ********** View Functions **********\\n    // ************************************\\n\\n    /**\\n     * @dev Get sale status information\\n     */\\n    function getSaleInfo()\\n        external\\n        view\\n        returns (\\n            bool _saleFinalized,\\n            bool _saleSuccessful,\\n            uint256 _totalRaised,\\n            uint256 _startTime,\\n            uint256 _endTime\\n        )\\n    {\\n        return (\\n            saleFinalized,\\n            saleSuccessful,\\n            totalRaised,\\n            saleStartTime,\\n            saleEndTime\\n        );\\n    }\\n\\n    /**\\n     * @dev Get contribution info for an address\\n     */\\n    function getContributionInfo(\\n        address _contributor\\n    ) external view returns (uint256 _contribution, bool _isWhitelisted) {\\n        return (contributions[_contributor], whitelist[_contributor]);\\n    }\\n\\n    /**\\n     * @dev Get time remaining in sale\\n     */\\n    function getTimeRemaining() external view returns (uint256) {\\n        if (saleStartTime == 0 || block.timestamp >= saleEndTime) {\\n            return 0;\\n        }\\n        return saleEndTime - block.timestamp;\\n    }\\n\\n    /**\\n     * @dev Calculate token allocation for a contributor (view only, for off-chain reference)\\n     * @param _contributor Address to calculate for\\n     * @param _totalTokensAllocated Total tokens allocated to presale (e.g., 5% of supply)\\n     */\\n    function calculateTokenAllocation(\\n        address _contributor,\\n        uint256 _totalTokensAllocated\\n    ) external view returns (uint256) {\\n        require(\\n            saleFinalized && saleSuccessful,\\n            \\\"Sale not successfully finalized\\\"\\n        );\\n        require(totalRaised > 0, \\\"No contributions\\\");\\n\\n        uint256 contributorUSDC = contributions[_contributor];\\n        if (contributorUSDC == 0) return 0;\\n\\n        // UserTokens = (User USDC / Total USDC Raised) \\u00d7 Total Allocated Tokens\\n        return (contributorUSDC * _totalTokensAllocated) / totalRaised;\\n    }\\n}\\n\",\"keccak256\":\"0x9cfeff83ada306b15bc573e1e922c5b4515ca836fb2b10f4d9191f028692f466\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c8063a5f0dea2116100de578063cd78d92c11610097578063ed338ff111610071578063ed338ff1146103fa578063f2fde38b14610418578063f881ccfa14610434578063fb86a404146104645761018e565b8063cd78d92c14610389578063dac6270d146103ba578063db83694c146103d85761018e565b8063a5f0dea2146102ff578063aaffadf31461031d578063b5545a3c1461033b578063b66a0e5d14610345578063b6b55f251461034f578063c5c4744c1461036b5761018e565b80636d79207c1161014b5780638d3d6576116101255780638d3d6576146102755780638da5cb5b14610293578063906a26e0146102b15780639b19251a146102cf5761018e565b80636d79207c14610231578063715018a61461024f5780638401f8d1146102595761018e565b806311eac855146101935780631cbaee2d146101b157806324600fc3146101cf57806342e94c90146101d957806358a687ec146102095780635eabe01e14610213575b600080fd5b61019b610482565b6040516101a89190611822565b60405180910390f35b6101b96104a6565b6040516101c69190611856565b60405180910390f35b6101d76104ac565b005b6101f360048036038101906101ee91906118b9565b6106bf565b6040516102009190611856565b60405180910390f35b6102116106d7565b005b61021b610784565b6040516102289190611901565b60405180910390f35b610239610797565b6040516102469190611856565b60405180910390f35b61025761079e565b005b610273600480360381019061026e9190611981565b6107b2565b005b61027d61095f565b60405161028a9190611856565b60405180910390f35b61029b610965565b6040516102a891906119dd565b60405180910390f35b6102b961098e565b6040516102c69190611856565b60405180910390f35b6102e960048036038101906102e491906118b9565b610994565b6040516102f69190611901565b60405180910390f35b6103076109b4565b6040516103149190611901565b60405180910390f35b6103256109c7565b6040516103329190611856565b60405180910390f35b6103436109cd565b005b61034d610be4565b005b61036960048036038101906103649190611a24565b610ce8565b005b610373611106565b6040516103809190611856565b60405180910390f35b6103a3600480360381019061039e91906118b9565b61110c565b6040516103b1929190611a51565b60405180910390f35b6103c26111a5565b6040516103cf9190611856565b60405180910390f35b6103e06111db565b6040516103f1959493929190611a7a565b60405180910390f35b61040261121d565b60405161040f9190611856565b60405180910390f35b610432600480360381019061042d91906118b9565b611223565b005b61044e60048036038101906104499190611acd565b6112a9565b60405161045b9190611856565b60405180910390f35b61046c6113d0565b6040516104799190611856565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b60065481565b6104b46113d6565b600960009054906101000a900460ff16610503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fa90611b6a565b60405180910390fd5b600960019054906101000a900460ff16610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054990611bd6565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105ad91906119dd565b602060405180830381865afa1580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee9190611c0b565b905060008111610633576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062a90611c84565b60405180910390fd5b61068561063e610965565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661145d9092919063ffffffff16565b7f4a37b25aab49761ecf63117fe82b98d750917451133cf797507bc9fb5b96044a816040516106b49190611856565b60405180910390a150565b600a6020528060005260406000206000915090505481565b600960009054906101000a900460ff1615610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071e90611cf0565b60405180910390fd5b60075442118061073b575060035460085410155b61077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077190611d82565b60405180910390fd5b6107826114dc565b565b600960019054906101000a900460ff1681565b6201518081565b6107a66113d6565b6107b06000611564565b565b6107ba6113d6565b60005b8282905081101561095a57600073ffffffffffffffffffffffffffffffffffffffff168383838181106107f3576107f2611da2565b5b905060200201602081019061080891906118b9565b73ffffffffffffffffffffffffffffffffffffffff160361085e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085590611e1d565b60405180910390fd5b6001600b600085858581811061087757610876611da2565b5b905060200201602081019061088c91906118b9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508282828181106108f0576108ef611da2565b5b905060200201602081019061090591906118b9565b73ffffffffffffffffffffffffffffffffffffffff167f7409cb8e690bcd1487fd4fd27dad3fa92388d201ba6f953631d6d6b26299f84960405160405180910390a2808061095290611e6c565b9150506107bd565b505050565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600b6020528060005260406000206000915054906101000a900460ff1681565b600960009054906101000a900460ff1681565b60045481565b600960009054906101000a900460ff16610a1c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1390611b6a565b60405180910390fd5b610a24611628565b600960019054906101000a900460ff1615610a74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6b90611f00565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af290611f6c565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610b8b33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661145d9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae982604051610bd19190611856565b60405180910390a250610be261166e565b565b610bec6113d6565b600754421180610bfe57506000600654145b610c3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3490611fd8565b60405180910390fd5b600960009054906101000a900460ff1615610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8490611cf0565b60405180910390fd5b426006819055506201518042610ca39190611ff8565b6007819055507f87d03dcfa12666a6f670d52387c414c3147775a8cc623d78088c0e23b4a90346600654600754604051610cde92919061202c565b60405180910390a1565b600060065411610d2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d24906120a1565b60405180910390fd5b600654421015610d72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d69906120a1565b60405180910390fd5b600754421115610db7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dae9061210d565b60405180910390fd5b60035460085410610dfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df490612179565b60405180910390fd5b610e05611628565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610e91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e88906121e5565b60405180910390fd5b600454811015610ed6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ecd90612251565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610f58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4f906122bd565b60405180910390fd5b600554811115610f9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9490612329565b60405180910390fd5b60035481600854610fae9190611ff8565b1115610fef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe690612395565b60405180910390fd5b61103c3330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611677909392919063ffffffff16565b80600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860008282546110929190611ff8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f6770260ea820d2f539364e7617e021543aaf6d192f2fd2a47c20db6bd99a4eb9826040516110df9190611856565b60405180910390a2600354600854106110fb576110fa6114dc565b5b61110361166e565b50565b60085481565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691509150915091565b60008060065414806111b957506007544210155b156111c757600090506111d8565b426007546111d591906123b5565b90505b90565b6000806000806000600960009054906101000a900460ff16600960019054906101000a900460ff16600854600654600754945094509450945094509091929394565b60075481565b61122b6113d6565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361129d5760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161129491906119dd565b60405180910390fd5b6112a681611564565b50565b6000600960009054906101000a900460ff1680156112d35750600960019054906101000a900460ff165b611312576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130990612435565b60405180910390fd5b600060085411611357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134e906124a1565b60405180910390fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036113ad5760009150506113ca565b60085483826113bc91906124c1565b6113c69190612532565b9150505b92915050565b60035481565b6113de6116f9565b73ffffffffffffffffffffffffffffffffffffffff166113fc610965565b73ffffffffffffffffffffffffffffffffffffffff161461145b5761141f6116f9565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161145291906119dd565b60405180910390fd5b565b6114d7838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611490929190612563565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611701565b505050565b6001600960006101000a81548160ff0219169083151502179055506002546008541015600960016101000a81548160ff0219169083151502179055507ff0d46ecf16ea6c4029ade01a6213d074c98f462769781b2a022fac1d81a58cbe600960019054906101000a900460ff1660085460405161155a92919061258c565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403611664576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b6116f3848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016116ac939291906125b5565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611701565b50505050565b600033905090565b600080602060008451602086016000885af180611724576040513d6000823e3d81fd5b3d92506000519150506000821461173f57600181141561175b565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b1561179d57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161179491906119dd565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006117e86117e36117de846117a3565b6117c3565b6117a3565b9050919050565b60006117fa826117cd565b9050919050565b600061180c826117ef565b9050919050565b61181c81611801565b82525050565b60006020820190506118376000830184611813565b92915050565b6000819050919050565b6118508161183d565b82525050565b600060208201905061186b6000830184611847565b92915050565b600080fd5b600080fd5b6000611886826117a3565b9050919050565b6118968161187b565b81146118a157600080fd5b50565b6000813590506118b38161188d565b92915050565b6000602082840312156118cf576118ce611871565b5b60006118dd848285016118a4565b91505092915050565b60008115159050919050565b6118fb816118e6565b82525050565b600060208201905061191660008301846118f2565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126119415761194061191c565b5b8235905067ffffffffffffffff81111561195e5761195d611921565b5b60208301915083602082028301111561197a57611979611926565b5b9250929050565b6000806020838503121561199857611997611871565b5b600083013567ffffffffffffffff8111156119b6576119b5611876565b5b6119c28582860161192b565b92509250509250929050565b6119d78161187b565b82525050565b60006020820190506119f260008301846119ce565b92915050565b611a018161183d565b8114611a0c57600080fd5b50565b600081359050611a1e816119f8565b92915050565b600060208284031215611a3a57611a39611871565b5b6000611a4884828501611a0f565b91505092915050565b6000604082019050611a666000830185611847565b611a7360208301846118f2565b9392505050565b600060a082019050611a8f60008301886118f2565b611a9c60208301876118f2565b611aa96040830186611847565b611ab66060830185611847565b611ac36080830184611847565b9695505050505050565b60008060408385031215611ae457611ae3611871565b5b6000611af2858286016118a4565b9250506020611b0385828601611a0f565b9150509250929050565b600082825260208201905092915050565b7f53616c65206e6f742066696e616c697a65640000000000000000000000000000600082015250565b6000611b54601283611b0d565b9150611b5f82611b1e565b602082019050919050565b60006020820190508181036000830152611b8381611b47565b9050919050565b7f53616c6520776173206e6f74207375636365737366756c000000000000000000600082015250565b6000611bc0601783611b0d565b9150611bcb82611b8a565b602082019050919050565b60006020820190508181036000830152611bef81611bb3565b9050919050565b600081519050611c05816119f8565b92915050565b600060208284031215611c2157611c20611871565b5b6000611c2f84828501611bf6565b91505092915050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611c6e601483611b0d565b9150611c7982611c38565b602082019050919050565b60006020820190508181036000830152611c9d81611c61565b9050919050565b7f53616c6520616c72656164792066696e616c697a656400000000000000000000600082015250565b6000611cda601683611b0d565b9150611ce582611ca4565b602082019050919050565b60006020820190508181036000830152611d0981611ccd565b9050919050565b7f53616c6520706572696f64206e6f7420656e64656420616e642068617264206360008201527f6170206e6f742072656163686564000000000000000000000000000000000000602082015250565b6000611d6c602e83611b0d565b9150611d7782611d10565b604082019050919050565b60006020820190508181036000830152611d9b81611d5f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c696420616464726573730000000000000000000000000000000000600082015250565b6000611e07600f83611b0d565b9150611e1282611dd1565b602082019050919050565b60006020820190508181036000830152611e3681611dfa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e778261183d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ea957611ea8611e3d565b5b600182019050919050565b7f53616c6520776173207375636365737366756c2c206e6f20726566756e647300600082015250565b6000611eea601f83611b0d565b9150611ef582611eb4565b602082019050919050565b60006020820190508181036000830152611f1981611edd565b9050919050565b7f4e6f20636f6e747269627574696f6e20666f756e640000000000000000000000600082015250565b6000611f56601583611b0d565b9150611f6182611f20565b602082019050919050565b60006020820190508181036000830152611f8581611f49565b9050919050565b7f53616c6520616c726561647920616374697665206f722066696e616c697a6564600082015250565b6000611fc2602083611b0d565b9150611fcd82611f8c565b602082019050919050565b60006020820190508181036000830152611ff181611fb5565b9050919050565b60006120038261183d565b915061200e8361183d565b925082820190508082111561202657612025611e3d565b5b92915050565b60006040820190506120416000830185611847565b61204e6020830184611847565b9392505050565b7f53616c65206e6f74207374617274656400000000000000000000000000000000600082015250565b600061208b601083611b0d565b915061209682612055565b602082019050919050565b600060208201905081810360008301526120ba8161207e565b9050919050565b7f53616c6520656e64656400000000000000000000000000000000000000000000600082015250565b60006120f7600a83611b0d565b9150612102826120c1565b602082019050919050565b60006020820190508181036000830152612126816120ea565b9050919050565b7f4861726420636170207265616368656400000000000000000000000000000000600082015250565b6000612163601083611b0d565b915061216e8261212d565b602082019050919050565b6000602082019050818103600083015261219281612156565b9050919050565b7f41646472657373206e6f742077686974656c6973746564000000000000000000600082015250565b60006121cf601783611b0d565b91506121da82612199565b602082019050919050565b600060208201905081810360008301526121fe816121c2565b9050919050565b7f42656c6f77206d696e696d756d20636f6e747269627574696f6e000000000000600082015250565b600061223b601a83611b0d565b915061224682612205565b602082019050919050565b6000602082019050818103600083015261226a8161222e565b9050919050565b7f416c726561647920636f6e747269627574656400000000000000000000000000600082015250565b60006122a7601383611b0d565b91506122b282612271565b602082019050919050565b600060208201905081810360008301526122d68161229a565b9050919050565b7f45786365656473206d6178696d756d20636f6e747269627574696f6e00000000600082015250565b6000612313601c83611b0d565b915061231e826122dd565b602082019050919050565b6000602082019050818103600083015261234281612306565b9050919050565b7f576f756c64206578636565642068617264206361700000000000000000000000600082015250565b600061237f601583611b0d565b915061238a82612349565b602082019050919050565b600060208201905081810360008301526123ae81612372565b9050919050565b60006123c08261183d565b91506123cb8361183d565b92508282039050818111156123e3576123e2611e3d565b5b92915050565b7f53616c65206e6f74207375636365737366756c6c792066696e616c697a656400600082015250565b600061241f601f83611b0d565b915061242a826123e9565b602082019050919050565b6000602082019050818103600083015261244e81612412565b9050919050565b7f4e6f20636f6e747269627574696f6e7300000000000000000000000000000000600082015250565b600061248b601083611b0d565b915061249682612455565b602082019050919050565b600060208201905081810360008301526124ba8161247e565b9050919050565b60006124cc8261183d565b91506124d78361183d565b92508282026124e58161183d565b915082820484148315176124fc576124fb611e3d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061253d8261183d565b91506125488361183d565b92508261255857612557612503565b5b828204905092915050565b600060408201905061257860008301856119ce565b6125856020830184611847565b9392505050565b60006040820190506125a160008301856118f2565b6125ae6020830184611847565b9392505050565b60006060820190506125ca60008301866119ce565b6125d760208301856119ce565b6125e46040830184611847565b94935050505056fea2646970667358221220eb1c5b4a6b2ec232acd8b658e0f8a03affc57b81d4e2ccabf0b99b9fd7c0e8c964736f6c63430008140033",
  "devdoc": {
    "details": "Presale contract for Backroom token with USDC contributions",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "addMultipleToWhitelist(address[])": {
        "details": "Add multiple users to whitelist (admin only)"
      },
      "calculateTokenAllocation(address,uint256)": {
        "details": "Calculate token allocation for a contributor (view only, for off-chain reference)",
        "params": {
          "_contributor": "Address to calculate for",
          "_totalTokensAllocated": "Total tokens allocated to presale (e.g., 5% of supply)"
        }
      },
      "claimRefund()": {
        "details": "Claim refund if sale failed (contributors only)"
      },
      "deposit(uint256)": {
        "details": "Contribute USDC to the presale"
      },
      "finalizeSale()": {
        "details": "Finalize the sale after 24 hours or when hard cap is reached"
      },
      "getContributionInfo(address)": {
        "details": "Get contribution info for an address"
      },
      "getSaleInfo()": {
        "details": "Get sale status information"
      },
      "getTimeRemaining()": {
        "details": "Get time remaining in sale"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "startSale()": {
        "details": "Start the presale (admin only)"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawFunds()": {
        "details": "Withdraw raised funds if sale was successful (admin only)"
      }
    },
    "title": "Presale",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Presale.sol:Presale",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1498,
        "contract": "contracts/Presale.sol:Presale",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3661,
        "contract": "contracts/Presale.sol:Presale",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3663,
        "contract": "contracts/Presale.sol:Presale",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 3665,
        "contract": "contracts/Presale.sol:Presale",
        "label": "minContribution",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 3667,
        "contract": "contracts/Presale.sol:Presale",
        "label": "maxContribution",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 3669,
        "contract": "contracts/Presale.sol:Presale",
        "label": "saleStartTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 3671,
        "contract": "contracts/Presale.sol:Presale",
        "label": "saleEndTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3673,
        "contract": "contracts/Presale.sol:Presale",
        "label": "totalRaised",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 3675,
        "contract": "contracts/Presale.sol:Presale",
        "label": "saleFinalized",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 3677,
        "contract": "contracts/Presale.sol:Presale",
        "label": "saleSuccessful",
        "offset": 1,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 3684,
        "contract": "contracts/Presale.sol:Presale",
        "label": "contributions",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 3688,
        "contract": "contracts/Presale.sol:Presale",
        "label": "whitelist",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}