{
  "address": "0xaCA9e1134518eB144639d36370490170d9E2fB25",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_softCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hardCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxContribution",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ContributionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RefundClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "successful",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalRaised",
          "type": "uint256"
        }
      ],
      "name": "SaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "SaleStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SALE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokensAllocated",
          "type": "uint256"
        }
      ],
      "name": "calculateTokenAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizeSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        }
      ],
      "name": "getContributionInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_contribution",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasContributed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_saleFinalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_saleSuccessful",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_totalRaised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasContributed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe4d67600c5713f4411a1d9efdd4625ff7ea7450ce9204603d875b98fa38fbd37",
  "receipt": {
    "to": null,
    "from": "0x1922d63490E4c8ad8F88D7023dFaE99609231d45",
    "contractAddress": "0xaCA9e1134518eB144639d36370490170d9E2fB25",
    "transactionIndex": 29,
    "gasUsed": "2070703",
    "logsBloom": "0x
    "blockHash": "0xc77a0760f7ce677f3c8f884c039c86826588675f75ef2135779ad7a68f5b34a1",
    "transactionHash": "0xe4d67600c5713f4411a1d9efdd4625ff7ea7450ce9204603d875b98fa38fbd37",
    "logs": [
      {
        "transactionIndex": 29,
        "blockNumber": 27196514,
        "transactionHash": "0xe4d67600c5713f4411a1d9efdd4625ff7ea7450ce9204603d875b98fa38fbd37",
        "address": "0xaCA9e1134518eB144639d36370490170d9E2fB25",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001922d63490e4c8ad8f88d7023dfae99609231d45"
        ],
        "data": "0x",
        "logIndex": 371,
        "blockHash": "0xc77a0760f7ce677f3c8f884c039c86826588675f75ef2135779ad7a68f5b34a1"
      }
    ],
    "blockNumber": 27196514,
    "cumulativeGasUsed": "13264105",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000000000",
    "2400000000000000000",
    "200000000000000000",
    "1000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "ec21181180d9b46570b3f71502f957c7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxContribution\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"successful\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRaised\",\"type\":\"uint256\"}],\"name\":\"SaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"SaleStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SALE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokensAllocated\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasContributed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_saleFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_saleSuccessful\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_totalRaised\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasContributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleSuccessful\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Presale contract for Backroom token with ETH contributions\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateTokenAllocation(address,uint256)\":{\"details\":\"Calculate token allocation for a contributor (view only, for off-chain reference)\",\"params\":{\"_contributor\":\"Address to calculate for\",\"_totalTokensAllocated\":\"Total tokens allocated to presale (e.g., 5% of supply)\"}},\"claimRefund()\":{\"details\":\"Claim refund if sale failed (contributors only)\"},\"deposit()\":{\"details\":\"Contribute ETH to the presale\"},\"finalizeSale()\":{\"details\":\"Finalize the sale after 24 hours or when hard cap is reached\"},\"getContributionInfo(address)\":{\"details\":\"Get contribution info for an address\"},\"getSaleInfo()\":{\"details\":\"Get sale status information\"},\"getTimeRemaining()\":{\"details\":\"Get time remaining in sale\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startSale()\":{\"details\":\"Start the presale (admin only)\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds()\":{\"details\":\"Withdraw raised funds if sale was successful (admin only)\"}},\"title\":\"BackroomPresale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Presale.sol\":\"BackroomPresale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/Presale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title BackroomPresale\\n * @dev Presale contract for Backroom token with ETH contributions\\n */\\ncontract BackroomPresale is Ownable, ReentrancyGuard {\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public minContribution;\\n    uint256 public maxContribution;\\n\\n    uint256 public saleStartTime;\\n    uint256 public saleEndTime;\\n    uint256 public totalRaised;\\n    bool public saleFinalized; // Has sale been finalized\\n    bool public saleSuccessful; // Did sale meet soft cap\\n\\n    uint256 public constant SALE_DURATION = 30 minutes;\\n\\n    mapping(address => uint256) public contributions; // ETH contributed per address\\n    mapping(address => bool) public hasContributed; // Track if address contributed\\n\\n    event SaleStarted(uint256 startTime, uint256 endTime);\\n    event ContributionMade(address indexed contributor, uint256 amount);\\n    event SaleFinalized(bool successful, uint256 totalRaised);\\n    event RefundClaimed(address indexed contributor, uint256 amount);\\n    event FundsWithdrawn(uint256 amount);\\n\\n    modifier onlyDuringSale() {\\n        require(saleStartTime > 0, \\\"Sale not started\\\");\\n        require(block.timestamp >= saleStartTime, \\\"Sale not started\\\");\\n        require(block.timestamp <= saleEndTime, \\\"Sale ended\\\");\\n        require(totalRaised < hardCap, \\\"Hard cap reached\\\");\\n        _;\\n    }\\n\\n    modifier onlyAfterSale() {\\n        require(saleFinalized, \\\"Sale not finalized\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        uint256 _softCap,\\n        uint256 _hardCap,\\n        uint256 _minContribution,\\n        uint256 _maxContribution\\n    ) Ownable(msg.sender) {\\n        require(_softCap > 0, \\\"Soft cap must be > 0\\\");\\n        require(_hardCap > _softCap, \\\"Hard cap must be > soft cap\\\");\\n        require(_minContribution > 0, \\\"Min contribution must be > 0\\\");\\n        require(\\n            _maxContribution >= _minContribution,\\n            \\\"Max must be >= min contribution\\\"\\n        );\\n        require(\\n            _maxContribution <= _hardCap,\\n            \\\"Max contribution cannot exceed hard cap\\\"\\n        );\\n\\n        softCap = _softCap;\\n        hardCap = _hardCap;\\n        minContribution = _minContribution;\\n        maxContribution = _maxContribution;\\n    }\\n\\n    /**\\n     * @dev Start the presale (admin only)\\n     */\\n    function startSale() external onlyOwner {\\n        require(\\n            block.timestamp > saleEndTime || saleStartTime == 0,\\n            \\\"Sale already active or finalized\\\"\\n        );\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n\\n        saleStartTime = block.timestamp;\\n        saleEndTime = block.timestamp + SALE_DURATION;\\n\\n        emit SaleStarted(saleStartTime, saleEndTime);\\n    }\\n\\n    /**\\n     * @dev Contribute ETH to the presale\\n     */\\n    function deposit() external payable onlyDuringSale nonReentrant {\\n        require(msg.value >= minContribution, \\\"Below minimum contribution\\\");\\n        require(!hasContributed[msg.sender], \\\"Already contributed\\\");\\n        require(msg.value <= maxContribution, \\\"Exceeds maximum contribution\\\");\\n        require(totalRaised + msg.value <= hardCap, \\\"Would exceed hard cap\\\");\\n\\n        contributions[msg.sender] = msg.value;\\n        hasContributed[msg.sender] = true;\\n        totalRaised += msg.value;\\n\\n        emit ContributionMade(msg.sender, msg.value);\\n\\n        if (totalRaised >= hardCap) {\\n            _finalizeSale();\\n        }\\n    }\\n\\n    /**\\n     * @dev Finalize the sale after 24 hours or when hard cap is reached\\n     */\\n    function finalizeSale() external {\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n        require(\\n            block.timestamp > saleEndTime || totalRaised >= hardCap,\\n            \\\"Sale period not ended and hard cap not reached\\\"\\n        );\\n\\n        _finalizeSale();\\n    }\\n\\n    /**\\n     * @dev Internal function to finalize sale\\n     */\\n    function _finalizeSale() internal {\\n        saleFinalized = true;\\n        saleSuccessful = totalRaised >= softCap;\\n\\n        emit SaleFinalized(saleSuccessful, totalRaised);\\n    }\\n\\n    /**\\n     * @dev Claim refund if sale failed (contributors only)\\n     */\\n    function claimRefund() external onlyAfterSale nonReentrant {\\n        require(!saleSuccessful, \\\"Sale was successful, no refunds\\\");\\n        require(hasContributed[msg.sender], \\\"No contribution found\\\");\\n\\n        uint256 refundAmount = contributions[msg.sender];\\n        require(refundAmount > 0, \\\"No refund available\\\");\\n\\n        hasContributed[msg.sender] = false;\\n\\n        (bool success, ) = payable(msg.sender).call{value: refundAmount}(\\\"\\\");\\n        require(success, \\\"Refund transfer failed\\\");\\n\\n        emit RefundClaimed(msg.sender, refundAmount);\\n    }\\n\\n    /**\\n     * @dev Withdraw raised funds if sale was successful (admin only)\\n     */\\n    function withdrawFunds() external onlyOwner onlyAfterSale {\\n        require(saleSuccessful, \\\"Sale was not successful\\\");\\n\\n        uint256 amount = address(this).balance;\\n        require(amount > 0, \\\"No funds to withdraw\\\");\\n\\n        (bool success, ) = payable(owner()).call{value: amount}(\\\"\\\");\\n        require(success, \\\"Withdrawal failed\\\");\\n\\n        emit FundsWithdrawn(amount);\\n    }\\n\\n    // ************************************\\n    // ********** View Functions **********\\n    // ************************************\\n\\n    /**\\n     * @dev Get sale status information\\n     */\\n    function getSaleInfo()\\n        external\\n        view\\n        returns (\\n            bool _saleFinalized,\\n            bool _saleSuccessful,\\n            uint256 _totalRaised,\\n            uint256 _startTime,\\n            uint256 _endTime\\n        )\\n    {\\n        return (\\n            saleFinalized,\\n            saleSuccessful,\\n            totalRaised,\\n            saleStartTime,\\n            saleEndTime\\n        );\\n    }\\n\\n    /**\\n     * @dev Get contribution info for an address\\n     */\\n    function getContributionInfo(\\n        address _contributor\\n    ) external view returns (uint256 _contribution, bool _hasContributed) {\\n        return (contributions[_contributor], hasContributed[_contributor]);\\n    }\\n\\n    /**\\n     * @dev Get time remaining in sale\\n     */\\n    function getTimeRemaining() external view returns (uint256) {\\n        if (saleStartTime == 0 || block.timestamp >= saleEndTime) {\\n            return 0;\\n        }\\n        return saleEndTime - block.timestamp;\\n    }\\n\\n    /**\\n     * @dev Calculate token allocation for a contributor (view only, for off-chain reference)\\n     * @param _contributor Address to calculate for\\n     * @param _totalTokensAllocated Total tokens allocated to presale (e.g., 5% of supply)\\n     */\\n    function calculateTokenAllocation(\\n        address _contributor,\\n        uint256 _totalTokensAllocated\\n    ) external view returns (uint256) {\\n        require(\\n            saleFinalized && saleSuccessful,\\n            \\\"Sale not successfully finalized\\\"\\n        );\\n        require(totalRaised > 0, \\\"No contributions\\\");\\n\\n        uint256 contributorETH = contributions[_contributor];\\n        if (contributorETH == 0) return 0;\\n\\n        // UserTokens = (User ETH / Total ETH Raised) \\u00d7 Total Allocated Tokens\\n        return (contributorETH * _totalTokensAllocated) / totalRaised;\\n    }\\n}\\n\",\"keccak256\":\"0xa1442200449b2d650ca9369a3b381a7c103900aad4a4c0ac1891a21e3aea6640\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061014b5760003560e01c8063aaffadf3116100b6578063dac6270d1161006f578063dac6270d14610408578063db83694c14610433578063ed338ff114610462578063f2fde38b1461048d578063f881ccfa146104b6578063fb86a404146104f35761014b565b8063aaffadf31461033c578063b5545a3c14610367578063b66a0e5d1461037e578063c5c4744c14610395578063cd78d92c146103c0578063d0e30db0146103fe5761014b565b80636d79207c116101085780636d79207c1461024e578063715018a6146102795780638d3d6576146102905780638da5cb5b146102bb578063906a26e0146102e6578063a5f0dea2146103115761014b565b80631cbaee2d14610150578063205b19461461017b57806324600fc3146101b857806342e94c90146101cf57806358a687ec1461020c5780635eabe01e14610223575b600080fd5b34801561015c57600080fd5b5061016561051e565b6040516101729190611535565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d91906115b3565b610524565b6040516101af91906115fb565b60405180910390f35b3480156101c457600080fd5b506101cd610544565b005b3480156101db57600080fd5b506101f660048036038101906101f191906115b3565b610720565b6040516102039190611535565b60405180910390f35b34801561021857600080fd5b50610221610738565b005b34801561022f57600080fd5b506102386107e5565b60405161024591906115fb565b60405180910390f35b34801561025a57600080fd5b506102636107f8565b6040516102709190611535565b60405180910390f35b34801561028557600080fd5b5061028e6107fe565b005b34801561029c57600080fd5b506102a5610812565b6040516102b29190611535565b60405180910390f35b3480156102c757600080fd5b506102d0610818565b6040516102dd9190611625565b60405180910390f35b3480156102f257600080fd5b506102fb610841565b6040516103089190611535565b60405180910390f35b34801561031d57600080fd5b50610326610847565b60405161033391906115fb565b60405180910390f35b34801561034857600080fd5b5061035161085a565b60405161035e9190611535565b60405180910390f35b34801561037357600080fd5b5061037c610860565b005b34801561038a57600080fd5b50610393610b78565b005b3480156103a157600080fd5b506103aa610c7b565b6040516103b79190611535565b60405180910390f35b3480156103cc57600080fd5b506103e760048036038101906103e291906115b3565b610c81565b6040516103f5929190611640565b60405180910390f35b610406610d1a565b005b34801561041457600080fd5b5061041d6110c1565b60405161042a9190611535565b60405180910390f35b34801561043f57600080fd5b506104486110f7565b604051610459959493929190611669565b60405180910390f35b34801561046e57600080fd5b50610477611139565b6040516104849190611535565b60405180910390f35b34801561049957600080fd5b506104b460048036038101906104af91906115b3565b61113f565b005b3480156104c257600080fd5b506104dd60048036038101906104d891906116e8565b6111c5565b6040516104ea9190611535565b60405180910390f35b3480156104ff57600080fd5b506105086112ec565b6040516105159190611535565b60405180910390f35b60065481565b600b6020528060005260406000206000915054906101000a900460ff1681565b61054c6112f2565b600960009054906101000a900460ff1661059b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059290611785565b60405180910390fd5b600960019054906101000a900460ff166105ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e1906117f1565b60405180910390fd5b600047905060008111610632576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106299061185d565b60405180910390fd5b600061063c610818565b73ffffffffffffffffffffffffffffffffffffffff168260405161065f906118ae565b60006040518083038185875af1925050503d806000811461069c576040519150601f19603f3d011682016040523d82523d6000602084013e6106a1565b606091505b50509050806106e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106dc9061190f565b60405180910390fd5b7f4a37b25aab49761ecf63117fe82b98d750917451133cf797507bc9fb5b96044a826040516107149190611535565b60405180910390a15050565b600a6020528060005260406000206000915090505481565b600960009054906101000a900460ff1615610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077f9061197b565b60405180910390fd5b60075442118061079c575060035460085410155b6107db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d290611a0d565b60405180910390fd5b6107e3611379565b565b600960019054906101000a900460ff1681565b61070881565b6108066112f2565b6108106000611401565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600960009054906101000a900460ff1681565b60045481565b600960009054906101000a900460ff166108af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a690611785565b60405180910390fd5b6108b76114c5565b600960019054906101000a900460ff1615610907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fe90611a79565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610993576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098a90611ae5565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610a1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1190611b51565b60405180910390fd5b6000600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610a98906118ae565b60006040518083038185875af1925050503d8060008114610ad5576040519150601f19603f3d011682016040523d82523d6000602084013e610ada565b606091505b5050905080610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1590611bbd565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae983604051610b649190611535565b60405180910390a25050610b7661150b565b565b610b806112f2565b600754421180610b9257506000600654145b610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611c29565b60405180910390fd5b600960009054906101000a900460ff1615610c21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c189061197b565b60405180910390fd5b4260068190555061070842610c369190611c78565b6007819055507f87d03dcfa12666a6f670d52387c414c3147775a8cc623d78088c0e23b4a90346600654600754604051610c71929190611cac565b60405180910390a1565b60085481565b600080600a60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691509150915091565b600060065411610d5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5690611d21565b60405180910390fd5b600654421015610da4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9b90611d21565b60405180910390fd5b600754421115610de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de090611d8d565b60405180910390fd5b60035460085410610e2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2690611df9565b60405180910390fd5b610e376114c5565b600454341015610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7390611e65565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610f09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0090611ed1565b60405180910390fd5b600554341115610f4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4590611f3d565b60405180910390fd5b60035434600854610f5f9190611c78565b1115610fa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9790611fa9565b60405180910390fd5b34600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550346008600082825461104e9190611c78565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f6770260ea820d2f539364e7617e021543aaf6d192f2fd2a47c20db6bd99a4eb93460405161109b9190611535565b60405180910390a2600354600854106110b7576110b6611379565b5b6110bf61150b565b565b60008060065414806110d557506007544210155b156110e357600090506110f4565b426007546110f19190611fc9565b90505b90565b6000806000806000600960009054906101000a900460ff16600960019054906101000a900460ff16600854600654600754945094509450945094509091929394565b60075481565b6111476112f2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111b95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111b09190611625565b60405180910390fd5b6111c281611401565b50565b6000600960009054906101000a900460ff1680156111ef5750600960019054906101000a900460ff165b61122e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122590612049565b60405180910390fd5b600060085411611273576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126a906120b5565b60405180910390fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036112c95760009150506112e6565b60085483826112d891906120d5565b6112e29190612146565b9150505b92915050565b60035481565b6112fa611514565b73ffffffffffffffffffffffffffffffffffffffff16611318610818565b73ffffffffffffffffffffffffffffffffffffffff16146113775761133b611514565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161136e9190611625565b60405180910390fd5b565b6001600960006101000a81548160ff0219169083151502179055506002546008541015600960016101000a81548160ff0219169083151502179055507ff0d46ecf16ea6c4029ade01a6213d074c98f462769781b2a022fac1d81a58cbe600960019054906101000a900460ff166008546040516113f7929190612177565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403611501576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600033905090565b6000819050919050565b61152f8161151c565b82525050565b600060208201905061154a6000830184611526565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061158082611555565b9050919050565b61159081611575565b811461159b57600080fd5b50565b6000813590506115ad81611587565b92915050565b6000602082840312156115c9576115c8611550565b5b60006115d78482850161159e565b91505092915050565b60008115159050919050565b6115f5816115e0565b82525050565b600060208201905061161060008301846115ec565b92915050565b61161f81611575565b82525050565b600060208201905061163a6000830184611616565b92915050565b60006040820190506116556000830185611526565b61166260208301846115ec565b9392505050565b600060a08201905061167e60008301886115ec565b61168b60208301876115ec565b6116986040830186611526565b6116a56060830185611526565b6116b26080830184611526565b9695505050505050565b6116c58161151c565b81146116d057600080fd5b50565b6000813590506116e2816116bc565b92915050565b600080604083850312156116ff576116fe611550565b5b600061170d8582860161159e565b925050602061171e858286016116d3565b9150509250929050565b600082825260208201905092915050565b7f53616c65206e6f742066696e616c697a65640000000000000000000000000000600082015250565b600061176f601283611728565b915061177a82611739565b602082019050919050565b6000602082019050818103600083015261179e81611762565b9050919050565b7f53616c6520776173206e6f74207375636365737366756c000000000000000000600082015250565b60006117db601783611728565b91506117e6826117a5565b602082019050919050565b6000602082019050818103600083015261180a816117ce565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611847601483611728565b915061185282611811565b602082019050919050565b600060208201905081810360008301526118768161183a565b9050919050565b600081905092915050565b50565b600061189860008361187d565b91506118a382611888565b600082019050919050565b60006118b98261188b565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b60006118f9601183611728565b9150611904826118c3565b602082019050919050565b60006020820190508181036000830152611928816118ec565b9050919050565b7f53616c6520616c72656164792066696e616c697a656400000000000000000000600082015250565b6000611965601683611728565b91506119708261192f565b602082019050919050565b6000602082019050818103600083015261199481611958565b9050919050565b7f53616c6520706572696f64206e6f7420656e64656420616e642068617264206360008201527f6170206e6f742072656163686564000000000000000000000000000000000000602082015250565b60006119f7602e83611728565b9150611a028261199b565b604082019050919050565b60006020820190508181036000830152611a26816119ea565b9050919050565b7f53616c6520776173207375636365737366756c2c206e6f20726566756e647300600082015250565b6000611a63601f83611728565b9150611a6e82611a2d565b602082019050919050565b60006020820190508181036000830152611a9281611a56565b9050919050565b7f4e6f20636f6e747269627574696f6e20666f756e640000000000000000000000600082015250565b6000611acf601583611728565b9150611ada82611a99565b602082019050919050565b60006020820190508181036000830152611afe81611ac2565b9050919050565b7f4e6f20726566756e6420617661696c61626c6500000000000000000000000000600082015250565b6000611b3b601383611728565b9150611b4682611b05565b602082019050919050565b60006020820190508181036000830152611b6a81611b2e565b9050919050565b7f526566756e64207472616e73666572206661696c656400000000000000000000600082015250565b6000611ba7601683611728565b9150611bb282611b71565b602082019050919050565b60006020820190508181036000830152611bd681611b9a565b9050919050565b7f53616c6520616c726561647920616374697665206f722066696e616c697a6564600082015250565b6000611c13602083611728565b9150611c1e82611bdd565b602082019050919050565b60006020820190508181036000830152611c4281611c06565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c838261151c565b9150611c8e8361151c565b9250828201905080821115611ca657611ca5611c49565b5b92915050565b6000604082019050611cc16000830185611526565b611cce6020830184611526565b9392505050565b7f53616c65206e6f74207374617274656400000000000000000000000000000000600082015250565b6000611d0b601083611728565b9150611d1682611cd5565b602082019050919050565b60006020820190508181036000830152611d3a81611cfe565b9050919050565b7f53616c6520656e64656400000000000000000000000000000000000000000000600082015250565b6000611d77600a83611728565b9150611d8282611d41565b602082019050919050565b60006020820190508181036000830152611da681611d6a565b9050919050565b7f4861726420636170207265616368656400000000000000000000000000000000600082015250565b6000611de3601083611728565b9150611dee82611dad565b602082019050919050565b60006020820190508181036000830152611e1281611dd6565b9050919050565b7f42656c6f77206d696e696d756d20636f6e747269627574696f6e000000000000600082015250565b6000611e4f601a83611728565b9150611e5a82611e19565b602082019050919050565b60006020820190508181036000830152611e7e81611e42565b9050919050565b7f416c726561647920636f6e747269627574656400000000000000000000000000600082015250565b6000611ebb601383611728565b9150611ec682611e85565b602082019050919050565b60006020820190508181036000830152611eea81611eae565b9050919050565b7f45786365656473206d6178696d756d20636f6e747269627574696f6e00000000600082015250565b6000611f27601c83611728565b9150611f3282611ef1565b602082019050919050565b60006020820190508181036000830152611f5681611f1a565b9050919050565b7f576f756c64206578636565642068617264206361700000000000000000000000600082015250565b6000611f93601583611728565b9150611f9e82611f5d565b602082019050919050565b60006020820190508181036000830152611fc281611f86565b9050919050565b6000611fd48261151c565b9150611fdf8361151c565b9250828203905081811115611ff757611ff6611c49565b5b92915050565b7f53616c65206e6f74207375636365737366756c6c792066696e616c697a656400600082015250565b6000612033601f83611728565b915061203e82611ffd565b602082019050919050565b6000602082019050818103600083015261206281612026565b9050919050565b7f4e6f20636f6e747269627574696f6e7300000000000000000000000000000000600082015250565b600061209f601083611728565b91506120aa82612069565b602082019050919050565b600060208201905081810360008301526120ce81612092565b9050919050565b60006120e08261151c565b91506120eb8361151c565b92508282026120f98161151c565b915082820484148315176121105761210f611c49565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121518261151c565b915061215c8361151c565b92508261216c5761216b612117565b5b828204905092915050565b600060408201905061218c60008301856115ec565b6121996020830184611526565b939250505056fea2646970667358221220a32a7eba9052c54ed3efb14e956926a1d8bbc14a0122228d8b3b9880b4a946bc64736f6c63430008140033",
  "devdoc": {
    "details": "Presale contract for Backroom token with ETH contributions",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "calculateTokenAllocation(address,uint256)": {
        "details": "Calculate token allocation for a contributor (view only, for off-chain reference)",
        "params": {
          "_contributor": "Address to calculate for",
          "_totalTokensAllocated": "Total tokens allocated to presale (e.g., 5% of supply)"
        }
      },
      "claimRefund()": {
        "details": "Claim refund if sale failed (contributors only)"
      },
      "deposit()": {
        "details": "Contribute ETH to the presale"
      },
      "finalizeSale()": {
        "details": "Finalize the sale after 24 hours or when hard cap is reached"
      },
      "getContributionInfo(address)": {
        "details": "Get contribution info for an address"
      },
      "getSaleInfo()": {
        "details": "Get sale status information"
      },
      "getTimeRemaining()": {
        "details": "Get time remaining in sale"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "startSale()": {
        "details": "Start the presale (admin only)"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawFunds()": {
        "details": "Withdraw raised funds if sale was successful (admin only)"
      }
    },
    "title": "BackroomPresale",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1498,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2158,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2160,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2162,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "minContribution",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2164,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "maxContribution",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2166,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleStartTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2168,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleEndTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 2170,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "totalRaised",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 2172,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleFinalized",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 2174,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleSuccessful",
        "offset": 1,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 2181,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "contributions",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2185,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hasContributed",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}