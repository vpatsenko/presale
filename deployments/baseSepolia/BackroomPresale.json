{
  "address": "0x2936dd096B564C6ea3E4A3d5664663E2a466CF40",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_softCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hardCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxContribution",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ContributionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RefundClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "successful",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalRaised",
          "type": "uint256"
        }
      ],
      "name": "SaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "SaleStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SALE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokensAllocated",
          "type": "uint256"
        }
      ],
      "name": "calculateTokenAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contributors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizeSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        }
      ],
      "name": "getContributionInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_contribution",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasContributed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_hasRefunded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContributors",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_saleFinalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_saleSuccessful",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_totalRaised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_contributors",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasContributed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRefunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1af8fbf9408a64bfc0007b4b2f21563c3ca85896b55de004a69737bb18b0c34a",
  "receipt": {
    "to": null,
    "from": "0x1922d63490E4c8ad8F88D7023dFaE99609231d45",
    "contractAddress": "0x2936dd096B564C6ea3E4A3d5664663E2a466CF40",
    "transactionIndex": 261,
    "gasUsed": "2334824",
    "logsBloom": "0x
    "blockHash": "0x95b053b3c6784afbf83fca9027f116f97947a50ce75595e96cb927c2ad51ed51",
    "transactionHash": "0x1af8fbf9408a64bfc0007b4b2f21563c3ca85896b55de004a69737bb18b0c34a",
    "logs": [
      {
        "transactionIndex": 261,
        "blockNumber": 26473202,
        "transactionHash": "0x1af8fbf9408a64bfc0007b4b2f21563c3ca85896b55de004a69737bb18b0c34a",
        "address": "0x2936dd096B564C6ea3E4A3d5664663E2a466CF40",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001922d63490e4c8ad8f88d7023dfae99609231d45"
        ],
        "data": "0x",
        "logIndex": 29,
        "blockHash": "0x95b053b3c6784afbf83fca9027f116f97947a50ce75595e96cb927c2ad51ed51"
      }
    ],
    "blockNumber": 26473202,
    "cumulativeGasUsed": "14696916",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "100000000000000000000000000000000000000",
    "300000000000000000000000000000000000000",
    "1000000000000000000000000000000000000",
    "3000000000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "2ba5693667d788f6656c41ce7aa408fd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxContribution\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"successful\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRaised\",\"type\":\"uint256\"}],\"name\":\"SaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"SaleStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SALE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokensAllocated\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasContributed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_hasRefunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContributors\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_saleFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_saleSuccessful\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_totalRaised\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contributors\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasContributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasRefunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleSuccessful\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Presale contract for Backroom token with ETH contributions Features: - 24-hour contribution window - One contribution per address - Soft cap / Hard cap mechanics - Min/Max contribution limits - Refund mechanism for failed sales\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateTokenAllocation(address,uint256)\":{\"details\":\"Calculate token allocation for a contributor (view only, for off-chain reference)\",\"params\":{\"_contributor\":\"Address to calculate for\",\"_totalTokensAllocated\":\"Total tokens allocated to presale (e.g., 5% of supply)\"}},\"claimRefund()\":{\"details\":\"Claim refund if sale failed (contributors only)\"},\"deposit()\":{\"details\":\"Contribute ETH to the presale\"},\"finalizeSale()\":{\"details\":\"Finalize the sale after 24 hours or when hard cap is reached\"},\"getContributionInfo(address)\":{\"details\":\"Get contribution info for an address\"},\"getContributors()\":{\"details\":\"Get all contributors (for off-chain token allocation calculation)\"},\"getSaleInfo()\":{\"details\":\"Get sale status information\"},\"getTimeRemaining()\":{\"details\":\"Get time remaining in sale\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startSale()\":{\"details\":\"Start the presale (admin only)\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds()\":{\"details\":\"Withdraw raised funds if sale was successful (admin only)\"}},\"title\":\"BackroomPresale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Presale.sol\":\"BackroomPresale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/Presale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title BackroomPresale\\n * @dev Presale contract for Backroom token with ETH contributions\\n * Features:\\n * - 24-hour contribution window\\n * - One contribution per address\\n * - Soft cap / Hard cap mechanics\\n * - Min/Max contribution limits\\n * - Refund mechanism for failed sales\\n */\\ncontract BackroomPresale is Ownable, ReentrancyGuard {\\n    // Sale Parameters\\n    uint256 public softCap; // Minimum ETH to raise for success\\n    uint256 public hardCap; // Maximum ETH before early close\\n    uint256 public minContribution; // Minimum ETH per address\\n    uint256 public maxContribution; // Maximum ETH per address\\n\\n    // Sale State\\n    uint256 public saleStartTime; // When sale begins\\n    uint256 public saleEndTime; // When sale ends (24h after start)\\n    uint256 public totalRaised; // Total ETH raised\\n    bool public saleFinalized; // Has sale been finalized\\n    bool public saleSuccessful; // Did sale meet soft cap\\n\\n    // Constants\\n    uint256 public constant SALE_DURATION = 24 hours;\\n\\n    // Participant tracking\\n    mapping(address => uint256) public contributions; // ETH contributed per address\\n    mapping(address => bool) public hasContributed; // Track if address contributed\\n    mapping(address => bool) public hasRefunded; // Track refund claims\\n\\n    address[] public contributors; // Array of all contributors\\n\\n    event SaleStarted(uint256 startTime, uint256 endTime);\\n    event ContributionMade(address indexed contributor, uint256 amount);\\n    event SaleFinalized(bool successful, uint256 totalRaised);\\n    event RefundClaimed(address indexed contributor, uint256 amount);\\n    event FundsWithdrawn(uint256 amount);\\n\\n    modifier onlyDuringSale() {\\n        require(saleStartTime > 0, \\\"Sale not started\\\");\\n        require(block.timestamp >= saleStartTime, \\\"Sale not started\\\");\\n        require(block.timestamp <= saleEndTime, \\\"Sale ended\\\");\\n        require(totalRaised < hardCap, \\\"Hard cap reached\\\");\\n        _;\\n    }\\n\\n    modifier onlyAfterSale() {\\n        require(saleFinalized, \\\"Sale not finalized\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        uint256 _softCap,\\n        uint256 _hardCap,\\n        uint256 _minContribution,\\n        uint256 _maxContribution\\n    ) Ownable(msg.sender) {\\n        require(_softCap > 0, \\\"Soft cap must be > 0\\\");\\n        require(_hardCap > _softCap, \\\"Hard cap must be > soft cap\\\");\\n        require(_minContribution > 0, \\\"Min contribution must be > 0\\\");\\n        require(\\n            _maxContribution >= _minContribution,\\n            \\\"Max must be >= min contribution\\\"\\n        );\\n        require(\\n            _maxContribution <= _hardCap,\\n            \\\"Max contribution cannot exceed hard cap\\\"\\n        );\\n\\n        softCap = _softCap;\\n        hardCap = _hardCap;\\n        minContribution = _minContribution;\\n        maxContribution = _maxContribution;\\n    }\\n\\n    /**\\n     * @dev Start the presale (admin only)\\n     */\\n    function startSale() external onlyOwner {\\n        require(\\n            block.timestamp > saleEndTime || saleStartTime == 0,\\n            \\\"Sale already active or finalized\\\"\\n        );\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n\\n        saleStartTime = block.timestamp;\\n        saleEndTime = block.timestamp + SALE_DURATION;\\n\\n        emit SaleStarted(saleStartTime, saleEndTime);\\n    }\\n\\n    /**\\n     * @dev Contribute ETH to the presale\\n     */\\n    function deposit() external payable onlyDuringSale nonReentrant {\\n        require(msg.value >= minContribution, \\\"Below minimum contribution\\\");\\n        require(!hasContributed[msg.sender], \\\"Already contributed\\\");\\n        require(msg.value <= maxContribution, \\\"Exceeds maximum contribution\\\");\\n        require(totalRaised + msg.value <= hardCap, \\\"Would exceed hard cap\\\");\\n\\n        // Record contribution\\n        contributions[msg.sender] = msg.value;\\n        hasContributed[msg.sender] = true;\\n        contributors.push(msg.sender);\\n        totalRaised += msg.value;\\n\\n        emit ContributionMade(msg.sender, msg.value);\\n\\n        // Auto-finalize if hard cap reached\\n        if (totalRaised >= hardCap) {\\n            _finalizeSale();\\n        }\\n    }\\n\\n    /**\\n     * @dev Finalize the sale after 24 hours or when hard cap is reached\\n     */\\n    function finalizeSale() external {\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n        require(\\n            block.timestamp > saleEndTime || totalRaised >= hardCap,\\n            \\\"Sale period not ended and hard cap not reached\\\"\\n        );\\n\\n        _finalizeSale();\\n    }\\n\\n    /**\\n     * @dev Internal function to finalize sale\\n     */\\n    function _finalizeSale() internal {\\n        saleFinalized = true;\\n        saleSuccessful = totalRaised >= softCap;\\n\\n        emit SaleFinalized(saleSuccessful, totalRaised);\\n    }\\n\\n    /**\\n     * @dev Claim refund if sale failed (contributors only)\\n     */\\n    function claimRefund() external onlyAfterSale nonReentrant {\\n        require(!saleSuccessful, \\\"Sale was successful, no refunds\\\");\\n        require(hasContributed[msg.sender], \\\"No contribution found\\\");\\n        require(!hasRefunded[msg.sender], \\\"Already refunded\\\");\\n\\n        uint256 refundAmount = contributions[msg.sender];\\n        require(refundAmount > 0, \\\"No refund available\\\");\\n\\n        hasRefunded[msg.sender] = true;\\n\\n        (bool success, ) = payable(msg.sender).call{value: refundAmount}(\\\"\\\");\\n        require(success, \\\"Refund transfer failed\\\");\\n\\n        emit RefundClaimed(msg.sender, refundAmount);\\n    }\\n\\n    /**\\n     * @dev Withdraw raised funds if sale was successful (admin only)\\n     */\\n    function withdrawFunds() external onlyOwner onlyAfterSale {\\n        require(saleSuccessful, \\\"Sale was not successful\\\");\\n\\n        uint256 amount = address(this).balance;\\n        require(amount > 0, \\\"No funds to withdraw\\\");\\n\\n        (bool success, ) = payable(owner()).call{value: amount}(\\\"\\\");\\n        require(success, \\\"Withdrawal failed\\\");\\n\\n        emit FundsWithdrawn(amount);\\n    }\\n\\n    // ************************************\\n    // ********** View Functions **********\\n    // ************************************\\n\\n    /**\\n     * @dev Get sale status information\\n     */\\n    function getSaleInfo()\\n        external\\n        view\\n        returns (\\n            bool _saleFinalized,\\n            bool _saleSuccessful,\\n            uint256 _totalRaised,\\n            uint256 _startTime,\\n            uint256 _endTime,\\n            uint256 _contributors\\n        )\\n    {\\n        return (\\n            saleFinalized,\\n            saleSuccessful,\\n            totalRaised,\\n            saleStartTime,\\n            saleEndTime,\\n            contributors.length\\n        );\\n    }\\n\\n    /**\\n     * @dev Get contribution info for an address\\n     */\\n    function getContributionInfo(\\n        address _contributor\\n    )\\n        external\\n        view\\n        returns (uint256 _contribution, bool _hasContributed, bool _hasRefunded)\\n    {\\n        return (\\n            contributions[_contributor],\\n            hasContributed[_contributor],\\n            hasRefunded[_contributor]\\n        );\\n    }\\n\\n    /**\\n     * @dev Get all contributors (for off-chain token allocation calculation)\\n     */\\n    function getContributors() external view returns (address[] memory) {\\n        return contributors;\\n    }\\n\\n    /**\\n     * @dev Get time remaining in sale\\n     */\\n    function getTimeRemaining() external view returns (uint256) {\\n        if (saleStartTime == 0 || block.timestamp >= saleEndTime) {\\n            return 0;\\n        }\\n        return saleEndTime - block.timestamp;\\n    }\\n\\n    /**\\n     * @dev Calculate token allocation for a contributor (view only, for off-chain reference)\\n     * @param _contributor Address to calculate for\\n     * @param _totalTokensAllocated Total tokens allocated to presale (e.g., 5% of supply)\\n     */\\n    function calculateTokenAllocation(\\n        address _contributor,\\n        uint256 _totalTokensAllocated\\n    ) external view returns (uint256) {\\n        require(\\n            saleFinalized && saleSuccessful,\\n            \\\"Sale not successfully finalized\\\"\\n        );\\n        require(totalRaised > 0, \\\"No contributions\\\");\\n\\n        uint256 contributorETH = contributions[_contributor];\\n        if (contributorETH == 0) return 0;\\n\\n        // UserTokens = (User ETH / Total ETH Raised) \\u00d7 Total Allocated Tokens\\n        return (contributorETH * _totalTokensAllocated) / totalRaised;\\n    }\\n}\\n\",\"keccak256\":\"0x7a79710b21eeb9de0ccc0cb32ab9e22149a44a64f678f49716da44bcaee1fe2a\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002d4138038062002d4183398181016040528101906200003791906200034d565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000404565b60405180910390fd5b620000be816200024960201b60201c565b5060018081905550600084116200010c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001039062000482565b60405180910390fd5b83831162000151576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014890620004f4565b60405180910390fd5b6000821162000197576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018e9062000566565b60405180910390fd5b81811015620001dd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001d490620005d8565b60405180910390fd5b8281111562000223576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200021a9062000670565b60405180910390fd5b836002819055508260038190555081600481905550806005819055505050505062000692565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620003278162000312565b81146200033357600080fd5b50565b60008151905062000347816200031c565b92915050565b600080600080608085870312156200036a57620003696200030d565b5b60006200037a8782880162000336565b94505060206200038d8782880162000336565b9350506040620003a08782880162000336565b9250506060620003b38782880162000336565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ec82620003bf565b9050919050565b620003fe81620003df565b82525050565b60006020820190506200041b6000830184620003f3565b92915050565b600082825260208201905092915050565b7f536f667420636170206d757374206265203e2030000000000000000000000000600082015250565b60006200046a60148362000421565b9150620004778262000432565b602082019050919050565b600060208201905081810360008301526200049d816200045b565b9050919050565b7f4861726420636170206d757374206265203e20736f6674206361700000000000600082015250565b6000620004dc601b8362000421565b9150620004e982620004a4565b602082019050919050565b600060208201905081810360008301526200050f81620004cd565b9050919050565b7f4d696e20636f6e747269627574696f6e206d757374206265203e203000000000600082015250565b60006200054e601c8362000421565b91506200055b8262000516565b602082019050919050565b6000602082019050818103600083015262000581816200053f565b9050919050565b7f4d6178206d757374206265203e3d206d696e20636f6e747269627574696f6e00600082015250565b6000620005c0601f8362000421565b9150620005cd8262000588565b602082019050919050565b60006020820190508181036000830152620005f381620005b1565b9050919050565b7f4d617820636f6e747269627574696f6e2063616e6e6f7420657863656564206860008201527f6172642063617000000000000000000000000000000000000000000000000000602082015250565b60006200065860278362000421565b91506200066582620005fa565b604082019050919050565b600060208201905081810360008301526200068b8162000649565b9050919050565b61269f80620006a26000396000f3fe60806040526004361061019c5760003560e01c8063a5f0dea2116100ec578063d0e30db01161008a578063ed338ff111610064578063ed338ff11461055a578063f2fde38b14610585578063f881ccfa146105ae578063fb86a404146105eb5761019c565b8063d0e30db0146104f5578063dac6270d146104ff578063db83694c1461052a5761019c565b8063b5545a3c116100c6578063b5545a3c1461045d578063b66a0e5d14610474578063c5c4744c1461048b578063cd78d92c146104b65761019c565b8063a5f0dea2146103dc578063aaffadf314610407578063af157c19146104325761019c565b806358a687ec11610159578063715018a611610133578063715018a6146103445780638d3d65761461035b5780638da5cb5b14610386578063906a26e0146103b15761019c565b806358a687ec146102d75780635eabe01e146102ee5780636d79207c146103195761019c565b80631cbaee2d146101a1578063205b1946146101cc57806324600fc3146102095780632b6b0633146102205780633cb5d1001461025d57806342e94c901461029a575b600080fd5b3480156101ad57600080fd5b506101b6610616565b6040516101c39190611869565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee91906118e7565b61061c565b604051610200919061192f565b60405180910390f35b34801561021557600080fd5b5061021e61063c565b005b34801561022c57600080fd5b50610247600480360381019061024291906118e7565b610818565b604051610254919061192f565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190611976565b610838565b60405161029191906119b2565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc91906118e7565b610877565b6040516102ce9190611869565b60405180910390f35b3480156102e357600080fd5b506102ec61088f565b005b3480156102fa57600080fd5b5061030361093c565b604051610310919061192f565b60405180910390f35b34801561032557600080fd5b5061032e61094f565b60405161033b9190611869565b60405180910390f35b34801561035057600080fd5b50610359610956565b005b34801561036757600080fd5b5061037061096a565b60405161037d9190611869565b60405180910390f35b34801561039257600080fd5b5061039b610970565b6040516103a891906119b2565b60405180910390f35b3480156103bd57600080fd5b506103c6610999565b6040516103d39190611869565b60405180910390f35b3480156103e857600080fd5b506103f161099f565b6040516103fe919061192f565b60405180910390f35b34801561041357600080fd5b5061041c6109b2565b6040516104299190611869565b60405180910390f35b34801561043e57600080fd5b506104476109b8565b6040516104549190611a8b565b60405180910390f35b34801561046957600080fd5b50610472610a46565b005b34801561048057600080fd5b50610489610deb565b005b34801561049757600080fd5b506104a0610eef565b6040516104ad9190611869565b60405180910390f35b3480156104c257600080fd5b506104dd60048036038101906104d891906118e7565b610ef5565b6040516104ec93929190611aad565b60405180910390f35b6104fd610fe1565b005b34801561050b57600080fd5b506105146113eb565b6040516105219190611869565b60405180910390f35b34801561053657600080fd5b5061053f611421565b60405161055196959493929190611ae4565b60405180910390f35b34801561056657600080fd5b5061056f61146d565b60405161057c9190611869565b60405180910390f35b34801561059157600080fd5b506105ac60048036038101906105a791906118e7565b611473565b005b3480156105ba57600080fd5b506105d560048036038101906105d09190611b45565b6114f9565b6040516105e29190611869565b60405180910390f35b3480156105f757600080fd5b50610600611620565b60405161060d9190611869565b60405180910390f35b60065481565b600b6020528060005260406000206000915054906101000a900460ff1681565b610644611626565b600960009054906101000a900460ff16610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90611be2565b60405180910390fd5b600960019054906101000a900460ff166106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611c4e565b60405180910390fd5b60004790506000811161072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072190611cba565b60405180910390fd5b6000610734610970565b73ffffffffffffffffffffffffffffffffffffffff168260405161075790611d0b565b60006040518083038185875af1925050503d8060008114610794576040519150601f19603f3d011682016040523d82523d6000602084013e610799565b606091505b50509050806107dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d490611d6c565b60405180910390fd5b7f4a37b25aab49761ecf63117fe82b98d750917451133cf797507bc9fb5b96044a8260405161080c9190611869565b60405180910390a15050565b600c6020528060005260406000206000915054906101000a900460ff1681565b600d818154811061084857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915090505481565b600960009054906101000a900460ff16156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690611dd8565b60405180910390fd5b6007544211806108f3575060035460085410155b610932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092990611e6a565b60405180910390fd5b61093a6116ad565b565b600960019054906101000a900460ff1681565b6201518081565b61095e611626565b6109686000611735565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600960009054906101000a900460ff1681565b60045481565b6060600d805480602002602001604051908101604052809291908181526020018280548015610a3c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109f2575b5050505050905090565b600960009054906101000a900460ff16610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611be2565b60405180910390fd5b610a9d6117f9565b600960019054906101000a900460ff1615610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490611ed6565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7090611f42565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd90611fae565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c849061201a565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610d0b90611d0b565b60006040518083038185875af1925050503d8060008114610d48576040519150601f19603f3d011682016040523d82523d6000602084013e610d4d565b606091505b5050905080610d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8890612086565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae983604051610dd79190611869565b60405180910390a25050610de961183f565b565b610df3611626565b600754421180610e0557506000600654145b610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b906120f2565b60405180910390fd5b600960009054906101000a900460ff1615610e94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8b90611dd8565b60405180910390fd5b426006819055506201518042610eaa9190612141565b6007819055507f87d03dcfa12666a6f670d52387c414c3147775a8cc623d78088c0e23b4a90346600654600754604051610ee5929190612175565b60405180910390a1565b60085481565b6000806000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169250925092509193909250565b600060065411611026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101d906121ea565b60405180910390fd5b60065442101561106b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611062906121ea565b60405180910390fd5b6007544211156110b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a790612256565b60405180910390fd5b600354600854106110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed906122c2565b60405180910390fd5b6110fe6117f9565b600454341015611143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113a9061232e565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156111d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c79061239a565b60405180910390fd5b600554341115611215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120c90612406565b60405180910390fd5b600354346008546112269190612141565b1115611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125e90612472565b60405180910390fd5b34600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600d339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600860008282546113789190612141565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f6770260ea820d2f539364e7617e021543aaf6d192f2fd2a47c20db6bd99a4eb9346040516113c59190611869565b60405180910390a2600354600854106113e1576113e06116ad565b5b6113e961183f565b565b60008060065414806113ff57506007544210155b1561140d576000905061141e565b4260075461141b9190612492565b90505b90565b600080600080600080600960009054906101000a900460ff16600960019054906101000a900460ff16600854600654600754600d80549050955095509550955095509550909192939495565b60075481565b61147b611626565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ed5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114e491906119b2565b60405180910390fd5b6114f681611735565b50565b6000600960009054906101000a900460ff1680156115235750600960019054906101000a900460ff165b611562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155990612512565b60405180910390fd5b6000600854116115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159e9061257e565b60405180910390fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036115fd57600091505061161a565b600854838261160c919061259e565b611616919061260f565b9150505b92915050565b60035481565b61162e611848565b73ffffffffffffffffffffffffffffffffffffffff1661164c610970565b73ffffffffffffffffffffffffffffffffffffffff16146116ab5761166f611848565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116a291906119b2565b60405180910390fd5b565b6001600960006101000a81548160ff0219169083151502179055506002546008541015600960016101000a81548160ff0219169083151502179055507ff0d46ecf16ea6c4029ade01a6213d074c98f462769781b2a022fac1d81a58cbe600960019054906101000a900460ff1660085460405161172b929190612640565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403611835576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600033905090565b6000819050919050565b61186381611850565b82525050565b600060208201905061187e600083018461185a565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118b482611889565b9050919050565b6118c4816118a9565b81146118cf57600080fd5b50565b6000813590506118e1816118bb565b92915050565b6000602082840312156118fd576118fc611884565b5b600061190b848285016118d2565b91505092915050565b60008115159050919050565b61192981611914565b82525050565b60006020820190506119446000830184611920565b92915050565b61195381611850565b811461195e57600080fd5b50565b6000813590506119708161194a565b92915050565b60006020828403121561198c5761198b611884565b5b600061199a84828501611961565b91505092915050565b6119ac816118a9565b82525050565b60006020820190506119c760008301846119a3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a02816118a9565b82525050565b6000611a1483836119f9565b60208301905092915050565b6000602082019050919050565b6000611a38826119cd565b611a4281856119d8565b9350611a4d836119e9565b8060005b83811015611a7e578151611a658882611a08565b9750611a7083611a20565b925050600181019050611a51565b5085935050505092915050565b60006020820190508181036000830152611aa58184611a2d565b905092915050565b6000606082019050611ac2600083018661185a565b611acf6020830185611920565b611adc6040830184611920565b949350505050565b600060c082019050611af96000830189611920565b611b066020830188611920565b611b13604083018761185a565b611b20606083018661185a565b611b2d608083018561185a565b611b3a60a083018461185a565b979650505050505050565b60008060408385031215611b5c57611b5b611884565b5b6000611b6a858286016118d2565b9250506020611b7b85828601611961565b9150509250929050565b600082825260208201905092915050565b7f53616c65206e6f742066696e616c697a65640000000000000000000000000000600082015250565b6000611bcc601283611b85565b9150611bd782611b96565b602082019050919050565b60006020820190508181036000830152611bfb81611bbf565b9050919050565b7f53616c6520776173206e6f74207375636365737366756c000000000000000000600082015250565b6000611c38601783611b85565b9150611c4382611c02565b602082019050919050565b60006020820190508181036000830152611c6781611c2b565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611ca4601483611b85565b9150611caf82611c6e565b602082019050919050565b60006020820190508181036000830152611cd381611c97565b9050919050565b600081905092915050565b50565b6000611cf5600083611cda565b9150611d0082611ce5565b600082019050919050565b6000611d1682611ce8565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b6000611d56601183611b85565b9150611d6182611d20565b602082019050919050565b60006020820190508181036000830152611d8581611d49565b9050919050565b7f53616c6520616c72656164792066696e616c697a656400000000000000000000600082015250565b6000611dc2601683611b85565b9150611dcd82611d8c565b602082019050919050565b60006020820190508181036000830152611df181611db5565b9050919050565b7f53616c6520706572696f64206e6f7420656e64656420616e642068617264206360008201527f6170206e6f742072656163686564000000000000000000000000000000000000602082015250565b6000611e54602e83611b85565b9150611e5f82611df8565b604082019050919050565b60006020820190508181036000830152611e8381611e47565b9050919050565b7f53616c6520776173207375636365737366756c2c206e6f20726566756e647300600082015250565b6000611ec0601f83611b85565b9150611ecb82611e8a565b602082019050919050565b60006020820190508181036000830152611eef81611eb3565b9050919050565b7f4e6f20636f6e747269627574696f6e20666f756e640000000000000000000000600082015250565b6000611f2c601583611b85565b9150611f3782611ef6565b602082019050919050565b60006020820190508181036000830152611f5b81611f1f565b9050919050565b7f416c726561647920726566756e64656400000000000000000000000000000000600082015250565b6000611f98601083611b85565b9150611fa382611f62565b602082019050919050565b60006020820190508181036000830152611fc781611f8b565b9050919050565b7f4e6f20726566756e6420617661696c61626c6500000000000000000000000000600082015250565b6000612004601383611b85565b915061200f82611fce565b602082019050919050565b6000602082019050818103600083015261203381611ff7565b9050919050565b7f526566756e64207472616e73666572206661696c656400000000000000000000600082015250565b6000612070601683611b85565b915061207b8261203a565b602082019050919050565b6000602082019050818103600083015261209f81612063565b9050919050565b7f53616c6520616c726561647920616374697665206f722066696e616c697a6564600082015250565b60006120dc602083611b85565b91506120e7826120a6565b602082019050919050565b6000602082019050818103600083015261210b816120cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061214c82611850565b915061215783611850565b925082820190508082111561216f5761216e612112565b5b92915050565b600060408201905061218a600083018561185a565b612197602083018461185a565b9392505050565b7f53616c65206e6f74207374617274656400000000000000000000000000000000600082015250565b60006121d4601083611b85565b91506121df8261219e565b602082019050919050565b60006020820190508181036000830152612203816121c7565b9050919050565b7f53616c6520656e64656400000000000000000000000000000000000000000000600082015250565b6000612240600a83611b85565b915061224b8261220a565b602082019050919050565b6000602082019050818103600083015261226f81612233565b9050919050565b7f4861726420636170207265616368656400000000000000000000000000000000600082015250565b60006122ac601083611b85565b91506122b782612276565b602082019050919050565b600060208201905081810360008301526122db8161229f565b9050919050565b7f42656c6f77206d696e696d756d20636f6e747269627574696f6e000000000000600082015250565b6000612318601a83611b85565b9150612323826122e2565b602082019050919050565b600060208201905081810360008301526123478161230b565b9050919050565b7f416c726561647920636f6e747269627574656400000000000000000000000000600082015250565b6000612384601383611b85565b915061238f8261234e565b602082019050919050565b600060208201905081810360008301526123b381612377565b9050919050565b7f45786365656473206d6178696d756d20636f6e747269627574696f6e00000000600082015250565b60006123f0601c83611b85565b91506123fb826123ba565b602082019050919050565b6000602082019050818103600083015261241f816123e3565b9050919050565b7f576f756c64206578636565642068617264206361700000000000000000000000600082015250565b600061245c601583611b85565b915061246782612426565b602082019050919050565b6000602082019050818103600083015261248b8161244f565b9050919050565b600061249d82611850565b91506124a883611850565b92508282039050818111156124c0576124bf612112565b5b92915050565b7f53616c65206e6f74207375636365737366756c6c792066696e616c697a656400600082015250565b60006124fc601f83611b85565b9150612507826124c6565b602082019050919050565b6000602082019050818103600083015261252b816124ef565b9050919050565b7f4e6f20636f6e747269627574696f6e7300000000000000000000000000000000600082015250565b6000612568601083611b85565b915061257382612532565b602082019050919050565b600060208201905081810360008301526125978161255b565b9050919050565b60006125a982611850565b91506125b483611850565b92508282026125c281611850565b915082820484148315176125d9576125d8612112565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061261a82611850565b915061262583611850565b925082612635576126346125e0565b5b828204905092915050565b60006040820190506126556000830185611920565b612662602083018461185a565b939250505056fea2646970667358221220a3b479eaf593adff210a1a6b3190d7def29c6f6c9bdca99b19bf2bf5fb71080164736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c8063a5f0dea2116100ec578063d0e30db01161008a578063ed338ff111610064578063ed338ff11461055a578063f2fde38b14610585578063f881ccfa146105ae578063fb86a404146105eb5761019c565b8063d0e30db0146104f5578063dac6270d146104ff578063db83694c1461052a5761019c565b8063b5545a3c116100c6578063b5545a3c1461045d578063b66a0e5d14610474578063c5c4744c1461048b578063cd78d92c146104b65761019c565b8063a5f0dea2146103dc578063aaffadf314610407578063af157c19146104325761019c565b806358a687ec11610159578063715018a611610133578063715018a6146103445780638d3d65761461035b5780638da5cb5b14610386578063906a26e0146103b15761019c565b806358a687ec146102d75780635eabe01e146102ee5780636d79207c146103195761019c565b80631cbaee2d146101a1578063205b1946146101cc57806324600fc3146102095780632b6b0633146102205780633cb5d1001461025d57806342e94c901461029a575b600080fd5b3480156101ad57600080fd5b506101b6610616565b6040516101c39190611869565b60405180910390f35b3480156101d857600080fd5b506101f360048036038101906101ee91906118e7565b61061c565b604051610200919061192f565b60405180910390f35b34801561021557600080fd5b5061021e61063c565b005b34801561022c57600080fd5b50610247600480360381019061024291906118e7565b610818565b604051610254919061192f565b60405180910390f35b34801561026957600080fd5b50610284600480360381019061027f9190611976565b610838565b60405161029191906119b2565b60405180910390f35b3480156102a657600080fd5b506102c160048036038101906102bc91906118e7565b610877565b6040516102ce9190611869565b60405180910390f35b3480156102e357600080fd5b506102ec61088f565b005b3480156102fa57600080fd5b5061030361093c565b604051610310919061192f565b60405180910390f35b34801561032557600080fd5b5061032e61094f565b60405161033b9190611869565b60405180910390f35b34801561035057600080fd5b50610359610956565b005b34801561036757600080fd5b5061037061096a565b60405161037d9190611869565b60405180910390f35b34801561039257600080fd5b5061039b610970565b6040516103a891906119b2565b60405180910390f35b3480156103bd57600080fd5b506103c6610999565b6040516103d39190611869565b60405180910390f35b3480156103e857600080fd5b506103f161099f565b6040516103fe919061192f565b60405180910390f35b34801561041357600080fd5b5061041c6109b2565b6040516104299190611869565b60405180910390f35b34801561043e57600080fd5b506104476109b8565b6040516104549190611a8b565b60405180910390f35b34801561046957600080fd5b50610472610a46565b005b34801561048057600080fd5b50610489610deb565b005b34801561049757600080fd5b506104a0610eef565b6040516104ad9190611869565b60405180910390f35b3480156104c257600080fd5b506104dd60048036038101906104d891906118e7565b610ef5565b6040516104ec93929190611aad565b60405180910390f35b6104fd610fe1565b005b34801561050b57600080fd5b506105146113eb565b6040516105219190611869565b60405180910390f35b34801561053657600080fd5b5061053f611421565b60405161055196959493929190611ae4565b60405180910390f35b34801561056657600080fd5b5061056f61146d565b60405161057c9190611869565b60405180910390f35b34801561059157600080fd5b506105ac60048036038101906105a791906118e7565b611473565b005b3480156105ba57600080fd5b506105d560048036038101906105d09190611b45565b6114f9565b6040516105e29190611869565b60405180910390f35b3480156105f757600080fd5b50610600611620565b60405161060d9190611869565b60405180910390f35b60065481565b600b6020528060005260406000206000915054906101000a900460ff1681565b610644611626565b600960009054906101000a900460ff16610693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068a90611be2565b60405180910390fd5b600960019054906101000a900460ff166106e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d990611c4e565b60405180910390fd5b60004790506000811161072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072190611cba565b60405180910390fd5b6000610734610970565b73ffffffffffffffffffffffffffffffffffffffff168260405161075790611d0b565b60006040518083038185875af1925050503d8060008114610794576040519150601f19603f3d011682016040523d82523d6000602084013e610799565b606091505b50509050806107dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d490611d6c565b60405180910390fd5b7f4a37b25aab49761ecf63117fe82b98d750917451133cf797507bc9fb5b96044a8260405161080c9190611869565b60405180910390a15050565b600c6020528060005260406000206000915054906101000a900460ff1681565b600d818154811061084857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915090505481565b600960009054906101000a900460ff16156108df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d690611dd8565b60405180910390fd5b6007544211806108f3575060035460085410155b610932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092990611e6a565b60405180910390fd5b61093a6116ad565b565b600960019054906101000a900460ff1681565b6201518081565b61095e611626565b6109686000611735565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600960009054906101000a900460ff1681565b60045481565b6060600d805480602002602001604051908101604052809291908181526020018280548015610a3c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116109f2575b5050505050905090565b600960009054906101000a900460ff16610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c90611be2565b60405180910390fd5b610a9d6117f9565b600960019054906101000a900460ff1615610aed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae490611ed6565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610b79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7090611f42565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610c06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfd90611fae565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c849061201a565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610d0b90611d0b565b60006040518083038185875af1925050503d8060008114610d48576040519150601f19603f3d011682016040523d82523d6000602084013e610d4d565b606091505b5050905080610d91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8890612086565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae983604051610dd79190611869565b60405180910390a25050610de961183f565b565b610df3611626565b600754421180610e0557506000600654145b610e44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3b906120f2565b60405180910390fd5b600960009054906101000a900460ff1615610e94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8b90611dd8565b60405180910390fd5b426006819055506201518042610eaa9190612141565b6007819055507f87d03dcfa12666a6f670d52387c414c3147775a8cc623d78088c0e23b4a90346600654600754604051610ee5929190612175565b60405180910390a1565b60085481565b6000806000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169250925092509193909250565b600060065411611026576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101d906121ea565b60405180910390fd5b60065442101561106b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611062906121ea565b60405180910390fd5b6007544211156110b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a790612256565b60405180910390fd5b600354600854106110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed906122c2565b60405180910390fd5b6110fe6117f9565b600454341015611143576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113a9061232e565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156111d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c79061239a565b60405180910390fd5b600554341115611215576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120c90612406565b60405180910390fd5b600354346008546112269190612141565b1115611267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125e90612472565b60405180910390fd5b34600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600d339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600860008282546113789190612141565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f6770260ea820d2f539364e7617e021543aaf6d192f2fd2a47c20db6bd99a4eb9346040516113c59190611869565b60405180910390a2600354600854106113e1576113e06116ad565b5b6113e961183f565b565b60008060065414806113ff57506007544210155b1561140d576000905061141e565b4260075461141b9190612492565b90505b90565b600080600080600080600960009054906101000a900460ff16600960019054906101000a900460ff16600854600654600754600d80549050955095509550955095509550909192939495565b60075481565b61147b611626565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114ed5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016114e491906119b2565b60405180910390fd5b6114f681611735565b50565b6000600960009054906101000a900460ff1680156115235750600960019054906101000a900460ff165b611562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155990612512565b60405180910390fd5b6000600854116115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159e9061257e565b60405180910390fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600081036115fd57600091505061161a565b600854838261160c919061259e565b611616919061260f565b9150505b92915050565b60035481565b61162e611848565b73ffffffffffffffffffffffffffffffffffffffff1661164c610970565b73ffffffffffffffffffffffffffffffffffffffff16146116ab5761166f611848565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116a291906119b2565b60405180910390fd5b565b6001600960006101000a81548160ff0219169083151502179055506002546008541015600960016101000a81548160ff0219169083151502179055507ff0d46ecf16ea6c4029ade01a6213d074c98f462769781b2a022fac1d81a58cbe600960019054906101000a900460ff1660085460405161172b929190612640565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403611835576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600033905090565b6000819050919050565b61186381611850565b82525050565b600060208201905061187e600083018461185a565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006118b482611889565b9050919050565b6118c4816118a9565b81146118cf57600080fd5b50565b6000813590506118e1816118bb565b92915050565b6000602082840312156118fd576118fc611884565b5b600061190b848285016118d2565b91505092915050565b60008115159050919050565b61192981611914565b82525050565b60006020820190506119446000830184611920565b92915050565b61195381611850565b811461195e57600080fd5b50565b6000813590506119708161194a565b92915050565b60006020828403121561198c5761198b611884565b5b600061199a84828501611961565b91505092915050565b6119ac816118a9565b82525050565b60006020820190506119c760008301846119a3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a02816118a9565b82525050565b6000611a1483836119f9565b60208301905092915050565b6000602082019050919050565b6000611a38826119cd565b611a4281856119d8565b9350611a4d836119e9565b8060005b83811015611a7e578151611a658882611a08565b9750611a7083611a20565b925050600181019050611a51565b5085935050505092915050565b60006020820190508181036000830152611aa58184611a2d565b905092915050565b6000606082019050611ac2600083018661185a565b611acf6020830185611920565b611adc6040830184611920565b949350505050565b600060c082019050611af96000830189611920565b611b066020830188611920565b611b13604083018761185a565b611b20606083018661185a565b611b2d608083018561185a565b611b3a60a083018461185a565b979650505050505050565b60008060408385031215611b5c57611b5b611884565b5b6000611b6a858286016118d2565b9250506020611b7b85828601611961565b9150509250929050565b600082825260208201905092915050565b7f53616c65206e6f742066696e616c697a65640000000000000000000000000000600082015250565b6000611bcc601283611b85565b9150611bd782611b96565b602082019050919050565b60006020820190508181036000830152611bfb81611bbf565b9050919050565b7f53616c6520776173206e6f74207375636365737366756c000000000000000000600082015250565b6000611c38601783611b85565b9150611c4382611c02565b602082019050919050565b60006020820190508181036000830152611c6781611c2b565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611ca4601483611b85565b9150611caf82611c6e565b602082019050919050565b60006020820190508181036000830152611cd381611c97565b9050919050565b600081905092915050565b50565b6000611cf5600083611cda565b9150611d0082611ce5565b600082019050919050565b6000611d1682611ce8565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b6000611d56601183611b85565b9150611d6182611d20565b602082019050919050565b60006020820190508181036000830152611d8581611d49565b9050919050565b7f53616c6520616c72656164792066696e616c697a656400000000000000000000600082015250565b6000611dc2601683611b85565b9150611dcd82611d8c565b602082019050919050565b60006020820190508181036000830152611df181611db5565b9050919050565b7f53616c6520706572696f64206e6f7420656e64656420616e642068617264206360008201527f6170206e6f742072656163686564000000000000000000000000000000000000602082015250565b6000611e54602e83611b85565b9150611e5f82611df8565b604082019050919050565b60006020820190508181036000830152611e8381611e47565b9050919050565b7f53616c6520776173207375636365737366756c2c206e6f20726566756e647300600082015250565b6000611ec0601f83611b85565b9150611ecb82611e8a565b602082019050919050565b60006020820190508181036000830152611eef81611eb3565b9050919050565b7f4e6f20636f6e747269627574696f6e20666f756e640000000000000000000000600082015250565b6000611f2c601583611b85565b9150611f3782611ef6565b602082019050919050565b60006020820190508181036000830152611f5b81611f1f565b9050919050565b7f416c726561647920726566756e64656400000000000000000000000000000000600082015250565b6000611f98601083611b85565b9150611fa382611f62565b602082019050919050565b60006020820190508181036000830152611fc781611f8b565b9050919050565b7f4e6f20726566756e6420617661696c61626c6500000000000000000000000000600082015250565b6000612004601383611b85565b915061200f82611fce565b602082019050919050565b6000602082019050818103600083015261203381611ff7565b9050919050565b7f526566756e64207472616e73666572206661696c656400000000000000000000600082015250565b6000612070601683611b85565b915061207b8261203a565b602082019050919050565b6000602082019050818103600083015261209f81612063565b9050919050565b7f53616c6520616c726561647920616374697665206f722066696e616c697a6564600082015250565b60006120dc602083611b85565b91506120e7826120a6565b602082019050919050565b6000602082019050818103600083015261210b816120cf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061214c82611850565b915061215783611850565b925082820190508082111561216f5761216e612112565b5b92915050565b600060408201905061218a600083018561185a565b612197602083018461185a565b9392505050565b7f53616c65206e6f74207374617274656400000000000000000000000000000000600082015250565b60006121d4601083611b85565b91506121df8261219e565b602082019050919050565b60006020820190508181036000830152612203816121c7565b9050919050565b7f53616c6520656e64656400000000000000000000000000000000000000000000600082015250565b6000612240600a83611b85565b915061224b8261220a565b602082019050919050565b6000602082019050818103600083015261226f81612233565b9050919050565b7f4861726420636170207265616368656400000000000000000000000000000000600082015250565b60006122ac601083611b85565b91506122b782612276565b602082019050919050565b600060208201905081810360008301526122db8161229f565b9050919050565b7f42656c6f77206d696e696d756d20636f6e747269627574696f6e000000000000600082015250565b6000612318601a83611b85565b9150612323826122e2565b602082019050919050565b600060208201905081810360008301526123478161230b565b9050919050565b7f416c726561647920636f6e747269627574656400000000000000000000000000600082015250565b6000612384601383611b85565b915061238f8261234e565b602082019050919050565b600060208201905081810360008301526123b381612377565b9050919050565b7f45786365656473206d6178696d756d20636f6e747269627574696f6e00000000600082015250565b60006123f0601c83611b85565b91506123fb826123ba565b602082019050919050565b6000602082019050818103600083015261241f816123e3565b9050919050565b7f576f756c64206578636565642068617264206361700000000000000000000000600082015250565b600061245c601583611b85565b915061246782612426565b602082019050919050565b6000602082019050818103600083015261248b8161244f565b9050919050565b600061249d82611850565b91506124a883611850565b92508282039050818111156124c0576124bf612112565b5b92915050565b7f53616c65206e6f74207375636365737366756c6c792066696e616c697a656400600082015250565b60006124fc601f83611b85565b9150612507826124c6565b602082019050919050565b6000602082019050818103600083015261252b816124ef565b9050919050565b7f4e6f20636f6e747269627574696f6e7300000000000000000000000000000000600082015250565b6000612568601083611b85565b915061257382612532565b602082019050919050565b600060208201905081810360008301526125978161255b565b9050919050565b60006125a982611850565b91506125b483611850565b92508282026125c281611850565b915082820484148315176125d9576125d8612112565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061261a82611850565b915061262583611850565b925082612635576126346125e0565b5b828204905092915050565b60006040820190506126556000830185611920565b612662602083018461185a565b939250505056fea2646970667358221220a3b479eaf593adff210a1a6b3190d7def29c6f6c9bdca99b19bf2bf5fb71080164736f6c63430008140033",
  "devdoc": {
    "details": "Presale contract for Backroom token with ETH contributions Features: - 24-hour contribution window - One contribution per address - Soft cap / Hard cap mechanics - Min/Max contribution limits - Refund mechanism for failed sales",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "calculateTokenAllocation(address,uint256)": {
        "details": "Calculate token allocation for a contributor (view only, for off-chain reference)",
        "params": {
          "_contributor": "Address to calculate for",
          "_totalTokensAllocated": "Total tokens allocated to presale (e.g., 5% of supply)"
        }
      },
      "claimRefund()": {
        "details": "Claim refund if sale failed (contributors only)"
      },
      "deposit()": {
        "details": "Contribute ETH to the presale"
      },
      "finalizeSale()": {
        "details": "Finalize the sale after 24 hours or when hard cap is reached"
      },
      "getContributionInfo(address)": {
        "details": "Get contribution info for an address"
      },
      "getContributors()": {
        "details": "Get all contributors (for off-chain token allocation calculation)"
      },
      "getSaleInfo()": {
        "details": "Get sale status information"
      },
      "getTimeRemaining()": {
        "details": "Get time remaining in sale"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "startSale()": {
        "details": "Start the presale (admin only)"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawFunds()": {
        "details": "Withdraw raised funds if sale was successful (admin only)"
      }
    },
    "title": "BackroomPresale",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 188,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 257,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 259,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 261,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "minContribution",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 263,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "maxContribution",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 265,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleStartTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 267,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleEndTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 269,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "totalRaised",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 271,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleFinalized",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 273,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleSuccessful",
        "offset": 1,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 280,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "contributions",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 284,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hasContributed",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 288,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hasRefunded",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 291,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "contributors",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}