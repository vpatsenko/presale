{
  "address": "0xf693108192d0BA2491e3f78dae43dDf8E5bAc9Ec",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_softCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hardCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minContribution",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxContribution",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ContributionMade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RefundClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "successful",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalRaised",
          "type": "uint256"
        }
      ],
      "name": "SaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        }
      ],
      "name": "SaleStarted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "SALE_DURATION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokensAllocated",
          "type": "uint256"
        }
      ],
      "name": "calculateTokenAllocation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "contributors",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalizeSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_contributor",
          "type": "address"
        }
      ],
      "name": "getContributionInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_contribution",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_hasContributed",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_hasRefunded",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSaleInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "_saleFinalized",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_saleSuccessful",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_totalRaised",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_contributors",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasContributed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasRefunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "saleSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x2d9d0ed2c550351f1e4dc6888550b8a254949d3dbde23270efca3d997b1f96f9",
  "receipt": {
    "to": null,
    "from": "0x1922d63490E4c8ad8F88D7023dFaE99609231d45",
    "contractAddress": "0xf693108192d0BA2491e3f78dae43dDf8E5bAc9Ec",
    "transactionIndex": 1,
    "gasUsed": "2240635",
    "logsBloom": "0x
    "blockHash": "0x506ae8d9c2d20420bde66c1ff36dedfda72ac8c86e2b564048035ed436be40cc",
    "transactionHash": "0x2d9d0ed2c550351f1e4dc6888550b8a254949d3dbde23270efca3d997b1f96f9",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 26932551,
        "transactionHash": "0x2d9d0ed2c550351f1e4dc6888550b8a254949d3dbde23270efca3d997b1f96f9",
        "address": "0xf693108192d0BA2491e3f78dae43dDf8E5bAc9Ec",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000001922d63490e4c8ad8f88d7023dfae99609231d45"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x506ae8d9c2d20420bde66c1ff36dedfda72ac8c86e2b564048035ed436be40cc"
      }
    ],
    "blockNumber": 26932551,
    "cumulativeGasUsed": "2286767",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "40000000000000000000000000000000",
    "5000000000000000000000000000000000",
    "10000000000000000000000000000000",
    "20000000000000000000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "e42c22ad93f86e75ae069654b4b73ec2",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minContribution\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxContribution\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ContributionMade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"successful\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalRaised\",\"type\":\"uint256\"}],\"name\":\"SaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"SaleStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SALE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokensAllocated\",\"type\":\"uint256\"}],\"name\":\"calculateTokenAllocation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRefund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contributors\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalizeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contributor\",\"type\":\"address\"}],\"name\":\"getContributionInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_contribution\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_hasContributed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_hasRefunded\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSaleInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"_saleFinalized\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_saleSuccessful\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_totalRaised\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_contributors\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasContributed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasRefunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleSuccessful\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Presale contract for Backroom token with ETH contributions\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"calculateTokenAllocation(address,uint256)\":{\"details\":\"Calculate token allocation for a contributor (view only, for off-chain reference)\",\"params\":{\"_contributor\":\"Address to calculate for\",\"_totalTokensAllocated\":\"Total tokens allocated to presale (e.g., 5% of supply)\"}},\"claimRefund()\":{\"details\":\"Claim refund if sale failed (contributors only)\"},\"deposit()\":{\"details\":\"Contribute ETH to the presale\"},\"finalizeSale()\":{\"details\":\"Finalize the sale after 24 hours or when hard cap is reached\"},\"getContributionInfo(address)\":{\"details\":\"Get contribution info for an address\"},\"getSaleInfo()\":{\"details\":\"Get sale status information\"},\"getTimeRemaining()\":{\"details\":\"Get time remaining in sale\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startSale()\":{\"details\":\"Start the presale (admin only)\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawFunds()\":{\"details\":\"Withdraw raised funds if sale was successful (admin only)\"}},\"title\":\"BackroomPresale\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Presale.sol\":\"BackroomPresale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"contracts/Presale.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\n\\n/**\\n * @title BackroomPresale\\n * @dev Presale contract for Backroom token with ETH contributions\\n */\\ncontract BackroomPresale is Ownable, ReentrancyGuard {\\n    uint256 public softCap; // Minimum ETH to raise for success\\n    uint256 public hardCap; // Maximum ETH before early close\\n    uint256 public minContribution; // Minimum ETH per address\\n    uint256 public maxContribution; // Maximum ETH per address\\n\\n    uint256 public saleStartTime; // When sale begins\\n    uint256 public saleEndTime; // When sale ends (24h after start)\\n    uint256 public totalRaised; // Total ETH raised\\n    bool public saleFinalized; // Has sale been finalized\\n    bool public saleSuccessful; // Did sale meet soft cap\\n\\n    uint256 public constant SALE_DURATION = 24 hours;\\n\\n    mapping(address => uint256) public contributions; // ETH contributed per address\\n    mapping(address => bool) public hasContributed; // Track if address contributed\\n    mapping(address => bool) public hasRefunded; // Track refund claims\\n\\n    address[] public contributors; // Array of all contributors\\n\\n    event SaleStarted(uint256 startTime, uint256 endTime);\\n    event ContributionMade(address indexed contributor, uint256 amount);\\n    event SaleFinalized(bool successful, uint256 totalRaised);\\n    event RefundClaimed(address indexed contributor, uint256 amount);\\n    event FundsWithdrawn(uint256 amount);\\n\\n    modifier onlyDuringSale() {\\n        require(saleStartTime > 0, \\\"Sale not started\\\");\\n        require(block.timestamp >= saleStartTime, \\\"Sale not started\\\");\\n        require(block.timestamp <= saleEndTime, \\\"Sale ended\\\");\\n        require(totalRaised < hardCap, \\\"Hard cap reached\\\");\\n        _;\\n    }\\n\\n    modifier onlyAfterSale() {\\n        require(saleFinalized, \\\"Sale not finalized\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        uint256 _softCap,\\n        uint256 _hardCap,\\n        uint256 _minContribution,\\n        uint256 _maxContribution\\n    ) Ownable(msg.sender) {\\n        require(_softCap > 0, \\\"Soft cap must be > 0\\\");\\n        require(_hardCap > _softCap, \\\"Hard cap must be > soft cap\\\");\\n        require(_minContribution > 0, \\\"Min contribution must be > 0\\\");\\n        require(\\n            _maxContribution >= _minContribution,\\n            \\\"Max must be >= min contribution\\\"\\n        );\\n        require(\\n            _maxContribution <= _hardCap,\\n            \\\"Max contribution cannot exceed hard cap\\\"\\n        );\\n\\n        softCap = _softCap;\\n        hardCap = _hardCap;\\n        minContribution = _minContribution;\\n        maxContribution = _maxContribution;\\n    }\\n\\n    /**\\n     * @dev Start the presale (admin only)\\n     */\\n    function startSale() external onlyOwner {\\n        require(\\n            block.timestamp > saleEndTime || saleStartTime == 0,\\n            \\\"Sale already active or finalized\\\"\\n        );\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n\\n        saleStartTime = block.timestamp;\\n        saleEndTime = block.timestamp + SALE_DURATION;\\n\\n        emit SaleStarted(saleStartTime, saleEndTime);\\n    }\\n\\n    /**\\n     * @dev Contribute ETH to the presale\\n     */\\n    function deposit() external payable onlyDuringSale nonReentrant {\\n        require(msg.value >= minContribution, \\\"Below minimum contribution\\\");\\n        require(!hasContributed[msg.sender], \\\"Already contributed\\\");\\n        require(msg.value <= maxContribution, \\\"Exceeds maximum contribution\\\");\\n        require(totalRaised + msg.value <= hardCap, \\\"Would exceed hard cap\\\");\\n\\n        // Record contribution\\n        contributions[msg.sender] = msg.value;\\n        hasContributed[msg.sender] = true;\\n        contributors.push(msg.sender);\\n        totalRaised += msg.value;\\n\\n        emit ContributionMade(msg.sender, msg.value);\\n\\n        // Auto-finalize if hard cap reached\\n        if (totalRaised >= hardCap) {\\n            _finalizeSale();\\n        }\\n    }\\n\\n    /**\\n     * @dev Finalize the sale after 24 hours or when hard cap is reached\\n     */\\n    function finalizeSale() external {\\n        require(!saleFinalized, \\\"Sale already finalized\\\");\\n        require(\\n            block.timestamp > saleEndTime || totalRaised >= hardCap,\\n            \\\"Sale period not ended and hard cap not reached\\\"\\n        );\\n\\n        _finalizeSale();\\n    }\\n\\n    /**\\n     * @dev Internal function to finalize sale\\n     */\\n    function _finalizeSale() internal {\\n        saleFinalized = true;\\n        saleSuccessful = totalRaised >= softCap;\\n\\n        emit SaleFinalized(saleSuccessful, totalRaised);\\n    }\\n\\n    /**\\n     * @dev Claim refund if sale failed (contributors only)\\n     */\\n    function claimRefund() external onlyAfterSale nonReentrant {\\n        require(!saleSuccessful, \\\"Sale was successful, no refunds\\\");\\n        require(hasContributed[msg.sender], \\\"No contribution found\\\");\\n        require(!hasRefunded[msg.sender], \\\"Already refunded\\\");\\n\\n        uint256 refundAmount = contributions[msg.sender];\\n        require(refundAmount > 0, \\\"No refund available\\\");\\n\\n        hasRefunded[msg.sender] = true;\\n\\n        (bool success, ) = payable(msg.sender).call{value: refundAmount}(\\\"\\\");\\n        require(success, \\\"Refund transfer failed\\\");\\n\\n        emit RefundClaimed(msg.sender, refundAmount);\\n    }\\n\\n    /**\\n     * @dev Withdraw raised funds if sale was successful (admin only)\\n     */\\n    function withdrawFunds() external onlyOwner onlyAfterSale {\\n        require(saleSuccessful, \\\"Sale was not successful\\\");\\n\\n        uint256 amount = address(this).balance;\\n        require(amount > 0, \\\"No funds to withdraw\\\");\\n\\n        (bool success, ) = payable(owner()).call{value: amount}(\\\"\\\");\\n        require(success, \\\"Withdrawal failed\\\");\\n\\n        emit FundsWithdrawn(amount);\\n    }\\n\\n    // ************************************\\n    // ********** View Functions **********\\n    // ************************************\\n\\n    /**\\n     * @dev Get sale status information\\n     */\\n    function getSaleInfo()\\n        external\\n        view\\n        returns (\\n            bool _saleFinalized,\\n            bool _saleSuccessful,\\n            uint256 _totalRaised,\\n            uint256 _startTime,\\n            uint256 _endTime,\\n            uint256 _contributors\\n        )\\n    {\\n        return (\\n            saleFinalized,\\n            saleSuccessful,\\n            totalRaised,\\n            saleStartTime,\\n            saleEndTime,\\n            contributors.length\\n        );\\n    }\\n\\n    /**\\n     * @dev Get contribution info for an address\\n     */\\n    function getContributionInfo(\\n        address _contributor\\n    )\\n        external\\n        view\\n        returns (uint256 _contribution, bool _hasContributed, bool _hasRefunded)\\n    {\\n        return (\\n            contributions[_contributor],\\n            hasContributed[_contributor],\\n            hasRefunded[_contributor]\\n        );\\n    }\\n\\n    /**\\n     * @dev Get time remaining in sale\\n     */\\n    function getTimeRemaining() external view returns (uint256) {\\n        if (saleStartTime == 0 || block.timestamp >= saleEndTime) {\\n            return 0;\\n        }\\n        return saleEndTime - block.timestamp;\\n    }\\n\\n    /**\\n     * @dev Calculate token allocation for a contributor (view only, for off-chain reference)\\n     * @param _contributor Address to calculate for\\n     * @param _totalTokensAllocated Total tokens allocated to presale (e.g., 5% of supply)\\n     */\\n    function calculateTokenAllocation(\\n        address _contributor,\\n        uint256 _totalTokensAllocated\\n    ) external view returns (uint256) {\\n        require(\\n            saleFinalized && saleSuccessful,\\n            \\\"Sale not successfully finalized\\\"\\n        );\\n        require(totalRaised > 0, \\\"No contributions\\\");\\n\\n        uint256 contributorETH = contributions[_contributor];\\n        if (contributorETH == 0) return 0;\\n\\n        // UserTokens = (User ETH / Total ETH Raised) \\u00d7 Total Allocated Tokens\\n        return (contributorETH * _totalTokensAllocated) / totalRaised;\\n    }\\n}\\n\",\"keccak256\":\"0x7f204d534409e57037358b7f45533f01a4767d034187c3dcbdfbd569825330f5\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002b8d38038062002b8d83398181016040528101906200003791906200034d565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000404565b60405180910390fd5b620000be816200024960201b60201c565b5060018081905550600084116200010c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001039062000482565b60405180910390fd5b83831162000151576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200014890620004f4565b60405180910390fd5b6000821162000197576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200018e9062000566565b60405180910390fd5b81811015620001dd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001d490620005d8565b60405180910390fd5b8281111562000223576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200021a9062000670565b60405180910390fd5b836002819055508260038190555081600481905550806005819055505050505062000692565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620003278162000312565b81146200033357600080fd5b50565b60008151905062000347816200031c565b92915050565b600080600080608085870312156200036a57620003696200030d565b5b60006200037a8782880162000336565b94505060206200038d8782880162000336565b9350506040620003a08782880162000336565b9250506060620003b38782880162000336565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620003ec82620003bf565b9050919050565b620003fe81620003df565b82525050565b60006020820190506200041b6000830184620003f3565b92915050565b600082825260208201905092915050565b7f536f667420636170206d757374206265203e2030000000000000000000000000600082015250565b60006200046a60148362000421565b9150620004778262000432565b602082019050919050565b600060208201905081810360008301526200049d816200045b565b9050919050565b7f4861726420636170206d757374206265203e20736f6674206361700000000000600082015250565b6000620004dc601b8362000421565b9150620004e982620004a4565b602082019050919050565b600060208201905081810360008301526200050f81620004cd565b9050919050565b7f4d696e20636f6e747269627574696f6e206d757374206265203e203000000000600082015250565b60006200054e601c8362000421565b91506200055b8262000516565b602082019050919050565b6000602082019050818103600083015262000581816200053f565b9050919050565b7f4d6178206d757374206265203e3d206d696e20636f6e747269627574696f6e00600082015250565b6000620005c0601f8362000421565b9150620005cd8262000588565b602082019050919050565b60006020820190508181036000830152620005f381620005b1565b9050919050565b7f4d617820636f6e747269627574696f6e2063616e6e6f7420657863656564206860008201527f6172642063617000000000000000000000000000000000000000000000000000602082015250565b60006200065860278362000421565b91506200066582620005fa565b604082019050919050565b600060208201905081810360008301526200068b8162000649565b9050919050565b6124eb80620006a26000396000f3fe6080604052600436106101815760003560e01c8063a5f0dea2116100d1578063d0e30db01161008a578063ed338ff111610064578063ed338ff114610514578063f2fde38b1461053f578063f881ccfa14610568578063fb86a404146105a557610181565b8063d0e30db0146104af578063dac6270d146104b9578063db83694c146104e457610181565b8063a5f0dea2146103c1578063aaffadf3146103ec578063b5545a3c14610417578063b66a0e5d1461042e578063c5c4744c14610445578063cd78d92c1461047057610181565b806358a687ec1161013e578063715018a611610118578063715018a6146103295780638d3d6576146103405780638da5cb5b1461036b578063906a26e01461039657610181565b806358a687ec146102bc5780635eabe01e146102d35780636d79207c146102fe57610181565b80631cbaee2d14610186578063205b1946146101b157806324600fc3146101ee5780632b6b0633146102055780633cb5d1001461024257806342e94c901461027f575b600080fd5b34801561019257600080fd5b5061019b6105d0565b6040516101a89190611795565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611813565b6105d6565b6040516101e5919061185b565b60405180910390f35b3480156101fa57600080fd5b506102036105f6565b005b34801561021157600080fd5b5061022c60048036038101906102279190611813565b6107d2565b604051610239919061185b565b60405180910390f35b34801561024e57600080fd5b50610269600480360381019061026491906118a2565b6107f2565b60405161027691906118de565b60405180910390f35b34801561028b57600080fd5b506102a660048036038101906102a19190611813565b610831565b6040516102b39190611795565b60405180910390f35b3480156102c857600080fd5b506102d1610849565b005b3480156102df57600080fd5b506102e86108f6565b6040516102f5919061185b565b60405180910390f35b34801561030a57600080fd5b50610313610909565b6040516103209190611795565b60405180910390f35b34801561033557600080fd5b5061033e610910565b005b34801561034c57600080fd5b50610355610924565b6040516103629190611795565b60405180910390f35b34801561037757600080fd5b5061038061092a565b60405161038d91906118de565b60405180910390f35b3480156103a257600080fd5b506103ab610953565b6040516103b89190611795565b60405180910390f35b3480156103cd57600080fd5b506103d6610959565b6040516103e3919061185b565b60405180910390f35b3480156103f857600080fd5b5061040161096c565b60405161040e9190611795565b60405180910390f35b34801561042357600080fd5b5061042c610972565b005b34801561043a57600080fd5b50610443610d17565b005b34801561045157600080fd5b5061045a610e1b565b6040516104679190611795565b60405180910390f35b34801561047c57600080fd5b5061049760048036038101906104929190611813565b610e21565b6040516104a6939291906118f9565b60405180910390f35b6104b7610f0d565b005b3480156104c557600080fd5b506104ce611317565b6040516104db9190611795565b60405180910390f35b3480156104f057600080fd5b506104f961134d565b60405161050b96959493929190611930565b60405180910390f35b34801561052057600080fd5b50610529611399565b6040516105369190611795565b60405180910390f35b34801561054b57600080fd5b5061056660048036038101906105619190611813565b61139f565b005b34801561057457600080fd5b5061058f600480360381019061058a9190611991565b611425565b60405161059c9190611795565b60405180910390f35b3480156105b157600080fd5b506105ba61154c565b6040516105c79190611795565b60405180910390f35b60065481565b600b6020528060005260406000206000915054906101000a900460ff1681565b6105fe611552565b600960009054906101000a900460ff1661064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490611a2e565b60405180910390fd5b600960019054906101000a900460ff1661069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390611a9a565b60405180910390fd5b6000479050600081116106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90611b06565b60405180910390fd5b60006106ee61092a565b73ffffffffffffffffffffffffffffffffffffffff168260405161071190611b57565b60006040518083038185875af1925050503d806000811461074e576040519150601f19603f3d011682016040523d82523d6000602084013e610753565b606091505b5050905080610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90611bb8565b60405180910390fd5b7f4a37b25aab49761ecf63117fe82b98d750917451133cf797507bc9fb5b96044a826040516107c69190611795565b60405180910390a15050565b600c6020528060005260406000206000915054906101000a900460ff1681565b600d818154811061080257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915090505481565b600960009054906101000a900460ff1615610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611c24565b60405180910390fd5b6007544211806108ad575060035460085410155b6108ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e390611cb6565b60405180910390fd5b6108f46115d9565b565b600960019054906101000a900460ff1681565b6201518081565b610918611552565b6109226000611661565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600960009054906101000a900460ff1681565b60045481565b600960009054906101000a900460ff166109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890611a2e565b60405180910390fd5b6109c9611725565b600960019054906101000a900460ff1615610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090611d22565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9c90611d8e565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2990611dfa565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb090611e66565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610c3790611b57565b60006040518083038185875af1925050503d8060008114610c74576040519150601f19603f3d011682016040523d82523d6000602084013e610c79565b606091505b5050905080610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611ed2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae983604051610d039190611795565b60405180910390a25050610d1561176b565b565b610d1f611552565b600754421180610d3157506000600654145b610d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6790611f3e565b60405180910390fd5b600960009054906101000a900460ff1615610dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db790611c24565b60405180910390fd5b426006819055506201518042610dd69190611f8d565b6007819055507f87d03dcfa12666a6f670d52387c414c3147775a8cc623d78088c0e23b4a90346600654600754604051610e11929190611fc1565b60405180910390a1565b60085481565b6000806000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169250925092509193909250565b600060065411610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4990612036565b60405180910390fd5b600654421015610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90612036565b60405180910390fd5b600754421115610fdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd3906120a2565b60405180910390fd5b60035460085410611022576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110199061210e565b60405180910390fd5b61102a611725565b60045434101561106f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110669061217a565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156110fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f3906121e6565b60405180910390fd5b600554341115611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113890612252565b60405180910390fd5b600354346008546111529190611f8d565b1115611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a906122be565b60405180910390fd5b34600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600d339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600860008282546112a49190611f8d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f6770260ea820d2f539364e7617e021543aaf6d192f2fd2a47c20db6bd99a4eb9346040516112f19190611795565b60405180910390a26003546008541061130d5761130c6115d9565b5b61131561176b565b565b600080600654148061132b57506007544210155b15611339576000905061134a565b4260075461134791906122de565b90505b90565b600080600080600080600960009054906101000a900460ff16600960019054906101000a900460ff16600854600654600754600d80549050955095509550955095509550909192939495565b60075481565b6113a7611552565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114195760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161141091906118de565b60405180910390fd5b61142281611661565b50565b6000600960009054906101000a900460ff16801561144f5750600960019054906101000a900460ff165b61148e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114859061235e565b60405180910390fd5b6000600854116114d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ca906123ca565b60405180910390fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008103611529576000915050611546565b600854838261153891906123ea565b611542919061245b565b9150505b92915050565b60035481565b61155a611774565b73ffffffffffffffffffffffffffffffffffffffff1661157861092a565b73ffffffffffffffffffffffffffffffffffffffff16146115d75761159b611774565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115ce91906118de565b60405180910390fd5b565b6001600960006101000a81548160ff0219169083151502179055506002546008541015600960016101000a81548160ff0219169083151502179055507ff0d46ecf16ea6c4029ade01a6213d074c98f462769781b2a022fac1d81a58cbe600960019054906101000a900460ff1660085460405161165792919061248c565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403611761576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600033905090565b6000819050919050565b61178f8161177c565b82525050565b60006020820190506117aa6000830184611786565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117e0826117b5565b9050919050565b6117f0816117d5565b81146117fb57600080fd5b50565b60008135905061180d816117e7565b92915050565b600060208284031215611829576118286117b0565b5b6000611837848285016117fe565b91505092915050565b60008115159050919050565b61185581611840565b82525050565b6000602082019050611870600083018461184c565b92915050565b61187f8161177c565b811461188a57600080fd5b50565b60008135905061189c81611876565b92915050565b6000602082840312156118b8576118b76117b0565b5b60006118c68482850161188d565b91505092915050565b6118d8816117d5565b82525050565b60006020820190506118f360008301846118cf565b92915050565b600060608201905061190e6000830186611786565b61191b602083018561184c565b611928604083018461184c565b949350505050565b600060c082019050611945600083018961184c565b611952602083018861184c565b61195f6040830187611786565b61196c6060830186611786565b6119796080830185611786565b61198660a0830184611786565b979650505050505050565b600080604083850312156119a8576119a76117b0565b5b60006119b6858286016117fe565b92505060206119c78582860161188d565b9150509250929050565b600082825260208201905092915050565b7f53616c65206e6f742066696e616c697a65640000000000000000000000000000600082015250565b6000611a186012836119d1565b9150611a23826119e2565b602082019050919050565b60006020820190508181036000830152611a4781611a0b565b9050919050565b7f53616c6520776173206e6f74207375636365737366756c000000000000000000600082015250565b6000611a846017836119d1565b9150611a8f82611a4e565b602082019050919050565b60006020820190508181036000830152611ab381611a77565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611af06014836119d1565b9150611afb82611aba565b602082019050919050565b60006020820190508181036000830152611b1f81611ae3565b9050919050565b600081905092915050565b50565b6000611b41600083611b26565b9150611b4c82611b31565b600082019050919050565b6000611b6282611b34565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b6000611ba26011836119d1565b9150611bad82611b6c565b602082019050919050565b60006020820190508181036000830152611bd181611b95565b9050919050565b7f53616c6520616c72656164792066696e616c697a656400000000000000000000600082015250565b6000611c0e6016836119d1565b9150611c1982611bd8565b602082019050919050565b60006020820190508181036000830152611c3d81611c01565b9050919050565b7f53616c6520706572696f64206e6f7420656e64656420616e642068617264206360008201527f6170206e6f742072656163686564000000000000000000000000000000000000602082015250565b6000611ca0602e836119d1565b9150611cab82611c44565b604082019050919050565b60006020820190508181036000830152611ccf81611c93565b9050919050565b7f53616c6520776173207375636365737366756c2c206e6f20726566756e647300600082015250565b6000611d0c601f836119d1565b9150611d1782611cd6565b602082019050919050565b60006020820190508181036000830152611d3b81611cff565b9050919050565b7f4e6f20636f6e747269627574696f6e20666f756e640000000000000000000000600082015250565b6000611d786015836119d1565b9150611d8382611d42565b602082019050919050565b60006020820190508181036000830152611da781611d6b565b9050919050565b7f416c726561647920726566756e64656400000000000000000000000000000000600082015250565b6000611de46010836119d1565b9150611def82611dae565b602082019050919050565b60006020820190508181036000830152611e1381611dd7565b9050919050565b7f4e6f20726566756e6420617661696c61626c6500000000000000000000000000600082015250565b6000611e506013836119d1565b9150611e5b82611e1a565b602082019050919050565b60006020820190508181036000830152611e7f81611e43565b9050919050565b7f526566756e64207472616e73666572206661696c656400000000000000000000600082015250565b6000611ebc6016836119d1565b9150611ec782611e86565b602082019050919050565b60006020820190508181036000830152611eeb81611eaf565b9050919050565b7f53616c6520616c726561647920616374697665206f722066696e616c697a6564600082015250565b6000611f286020836119d1565b9150611f3382611ef2565b602082019050919050565b60006020820190508181036000830152611f5781611f1b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f988261177c565b9150611fa38361177c565b9250828201905080821115611fbb57611fba611f5e565b5b92915050565b6000604082019050611fd66000830185611786565b611fe36020830184611786565b9392505050565b7f53616c65206e6f74207374617274656400000000000000000000000000000000600082015250565b60006120206010836119d1565b915061202b82611fea565b602082019050919050565b6000602082019050818103600083015261204f81612013565b9050919050565b7f53616c6520656e64656400000000000000000000000000000000000000000000600082015250565b600061208c600a836119d1565b915061209782612056565b602082019050919050565b600060208201905081810360008301526120bb8161207f565b9050919050565b7f4861726420636170207265616368656400000000000000000000000000000000600082015250565b60006120f86010836119d1565b9150612103826120c2565b602082019050919050565b60006020820190508181036000830152612127816120eb565b9050919050565b7f42656c6f77206d696e696d756d20636f6e747269627574696f6e000000000000600082015250565b6000612164601a836119d1565b915061216f8261212e565b602082019050919050565b6000602082019050818103600083015261219381612157565b9050919050565b7f416c726561647920636f6e747269627574656400000000000000000000000000600082015250565b60006121d06013836119d1565b91506121db8261219a565b602082019050919050565b600060208201905081810360008301526121ff816121c3565b9050919050565b7f45786365656473206d6178696d756d20636f6e747269627574696f6e00000000600082015250565b600061223c601c836119d1565b915061224782612206565b602082019050919050565b6000602082019050818103600083015261226b8161222f565b9050919050565b7f576f756c64206578636565642068617264206361700000000000000000000000600082015250565b60006122a86015836119d1565b91506122b382612272565b602082019050919050565b600060208201905081810360008301526122d78161229b565b9050919050565b60006122e98261177c565b91506122f48361177c565b925082820390508181111561230c5761230b611f5e565b5b92915050565b7f53616c65206e6f74207375636365737366756c6c792066696e616c697a656400600082015250565b6000612348601f836119d1565b915061235382612312565b602082019050919050565b600060208201905081810360008301526123778161233b565b9050919050565b7f4e6f20636f6e747269627574696f6e7300000000000000000000000000000000600082015250565b60006123b46010836119d1565b91506123bf8261237e565b602082019050919050565b600060208201905081810360008301526123e3816123a7565b9050919050565b60006123f58261177c565b91506124008361177c565b925082820261240e8161177c565b9150828204841483151761242557612424611f5e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006124668261177c565b91506124718361177c565b9250826124815761248061242c565b5b828204905092915050565b60006040820190506124a1600083018561184c565b6124ae6020830184611786565b939250505056fea264697066735822122086d76862fca8bad011249ebe0704176fd870e47f2af3025e99aaad9c2604161564736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c8063a5f0dea2116100d1578063d0e30db01161008a578063ed338ff111610064578063ed338ff114610514578063f2fde38b1461053f578063f881ccfa14610568578063fb86a404146105a557610181565b8063d0e30db0146104af578063dac6270d146104b9578063db83694c146104e457610181565b8063a5f0dea2146103c1578063aaffadf3146103ec578063b5545a3c14610417578063b66a0e5d1461042e578063c5c4744c14610445578063cd78d92c1461047057610181565b806358a687ec1161013e578063715018a611610118578063715018a6146103295780638d3d6576146103405780638da5cb5b1461036b578063906a26e01461039657610181565b806358a687ec146102bc5780635eabe01e146102d35780636d79207c146102fe57610181565b80631cbaee2d14610186578063205b1946146101b157806324600fc3146101ee5780632b6b0633146102055780633cb5d1001461024257806342e94c901461027f575b600080fd5b34801561019257600080fd5b5061019b6105d0565b6040516101a89190611795565b60405180910390f35b3480156101bd57600080fd5b506101d860048036038101906101d39190611813565b6105d6565b6040516101e5919061185b565b60405180910390f35b3480156101fa57600080fd5b506102036105f6565b005b34801561021157600080fd5b5061022c60048036038101906102279190611813565b6107d2565b604051610239919061185b565b60405180910390f35b34801561024e57600080fd5b50610269600480360381019061026491906118a2565b6107f2565b60405161027691906118de565b60405180910390f35b34801561028b57600080fd5b506102a660048036038101906102a19190611813565b610831565b6040516102b39190611795565b60405180910390f35b3480156102c857600080fd5b506102d1610849565b005b3480156102df57600080fd5b506102e86108f6565b6040516102f5919061185b565b60405180910390f35b34801561030a57600080fd5b50610313610909565b6040516103209190611795565b60405180910390f35b34801561033557600080fd5b5061033e610910565b005b34801561034c57600080fd5b50610355610924565b6040516103629190611795565b60405180910390f35b34801561037757600080fd5b5061038061092a565b60405161038d91906118de565b60405180910390f35b3480156103a257600080fd5b506103ab610953565b6040516103b89190611795565b60405180910390f35b3480156103cd57600080fd5b506103d6610959565b6040516103e3919061185b565b60405180910390f35b3480156103f857600080fd5b5061040161096c565b60405161040e9190611795565b60405180910390f35b34801561042357600080fd5b5061042c610972565b005b34801561043a57600080fd5b50610443610d17565b005b34801561045157600080fd5b5061045a610e1b565b6040516104679190611795565b60405180910390f35b34801561047c57600080fd5b5061049760048036038101906104929190611813565b610e21565b6040516104a6939291906118f9565b60405180910390f35b6104b7610f0d565b005b3480156104c557600080fd5b506104ce611317565b6040516104db9190611795565b60405180910390f35b3480156104f057600080fd5b506104f961134d565b60405161050b96959493929190611930565b60405180910390f35b34801561052057600080fd5b50610529611399565b6040516105369190611795565b60405180910390f35b34801561054b57600080fd5b5061056660048036038101906105619190611813565b61139f565b005b34801561057457600080fd5b5061058f600480360381019061058a9190611991565b611425565b60405161059c9190611795565b60405180910390f35b3480156105b157600080fd5b506105ba61154c565b6040516105c79190611795565b60405180910390f35b60065481565b600b6020528060005260406000206000915054906101000a900460ff1681565b6105fe611552565b600960009054906101000a900460ff1661064d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064490611a2e565b60405180910390fd5b600960019054906101000a900460ff1661069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390611a9a565b60405180910390fd5b6000479050600081116106e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106db90611b06565b60405180910390fd5b60006106ee61092a565b73ffffffffffffffffffffffffffffffffffffffff168260405161071190611b57565b60006040518083038185875af1925050503d806000811461074e576040519150601f19603f3d011682016040523d82523d6000602084013e610753565b606091505b5050905080610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078e90611bb8565b60405180910390fd5b7f4a37b25aab49761ecf63117fe82b98d750917451133cf797507bc9fb5b96044a826040516107c69190611795565b60405180910390a15050565b600c6020528060005260406000206000915054906101000a900460ff1681565b600d818154811061080257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a6020528060005260406000206000915090505481565b600960009054906101000a900460ff1615610899576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089090611c24565b60405180910390fd5b6007544211806108ad575060035460085410155b6108ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e390611cb6565b60405180910390fd5b6108f46115d9565b565b600960019054906101000a900460ff1681565b6201518081565b610918611552565b6109226000611661565b565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b600960009054906101000a900460ff1681565b60045481565b600960009054906101000a900460ff166109c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b890611a2e565b60405180910390fd5b6109c9611725565b600960019054906101000a900460ff1615610a19576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1090611d22565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610aa5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9c90611d8e565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2990611dfa565b60405180910390fd5b6000600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008111610bb9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb090611e66565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610c3790611b57565b60006040518083038185875af1925050503d8060008114610c74576040519150601f19603f3d011682016040523d82523d6000602084013e610c79565b606091505b5050905080610cbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb490611ed2565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f358fe4192934d3bf28ae181feda1f4bd08ca67f5e2fad55582cce5eb67304ae983604051610d039190611795565b60405180910390a25050610d1561176b565b565b610d1f611552565b600754421180610d3157506000600654145b610d70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6790611f3e565b60405180910390fd5b600960009054906101000a900460ff1615610dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db790611c24565b60405180910390fd5b426006819055506201518042610dd69190611f8d565b6007819055507f87d03dcfa12666a6f670d52387c414c3147775a8cc623d78088c0e23b4a90346600654600754604051610e11929190611fc1565b60405180910390a1565b60085481565b6000806000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600b60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169250925092509193909250565b600060065411610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4990612036565b60405180910390fd5b600654421015610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e90612036565b60405180910390fd5b600754421115610fdc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd3906120a2565b60405180910390fd5b60035460085410611022576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110199061210e565b60405180910390fd5b61102a611725565b60045434101561106f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110669061217a565b60405180910390fd5b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156110fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f3906121e6565b60405180910390fd5b600554341115611141576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113890612252565b60405180910390fd5b600354346008546111529190611f8d565b1115611193576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118a906122be565b60405180910390fd5b34600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600d339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600860008282546112a49190611f8d565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f6770260ea820d2f539364e7617e021543aaf6d192f2fd2a47c20db6bd99a4eb9346040516112f19190611795565b60405180910390a26003546008541061130d5761130c6115d9565b5b61131561176b565b565b600080600654148061132b57506007544210155b15611339576000905061134a565b4260075461134791906122de565b90505b90565b600080600080600080600960009054906101000a900460ff16600960019054906101000a900460ff16600854600654600754600d80549050955095509550955095509550909192939495565b60075481565b6113a7611552565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036114195760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161141091906118de565b60405180910390fd5b61142281611661565b50565b6000600960009054906101000a900460ff16801561144f5750600960019054906101000a900460ff165b61148e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114859061235e565b60405180910390fd5b6000600854116114d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ca906123ca565b60405180910390fd5b6000600a60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008103611529576000915050611546565b600854838261153891906123ea565b611542919061245b565b9150505b92915050565b60035481565b61155a611774565b73ffffffffffffffffffffffffffffffffffffffff1661157861092a565b73ffffffffffffffffffffffffffffffffffffffff16146115d75761159b611774565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016115ce91906118de565b60405180910390fd5b565b6001600960006101000a81548160ff0219169083151502179055506002546008541015600960016101000a81548160ff0219169083151502179055507ff0d46ecf16ea6c4029ade01a6213d074c98f462769781b2a022fac1d81a58cbe600960019054906101000a900460ff1660085460405161165792919061248c565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600260015403611761576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b600033905090565b6000819050919050565b61178f8161177c565b82525050565b60006020820190506117aa6000830184611786565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117e0826117b5565b9050919050565b6117f0816117d5565b81146117fb57600080fd5b50565b60008135905061180d816117e7565b92915050565b600060208284031215611829576118286117b0565b5b6000611837848285016117fe565b91505092915050565b60008115159050919050565b61185581611840565b82525050565b6000602082019050611870600083018461184c565b92915050565b61187f8161177c565b811461188a57600080fd5b50565b60008135905061189c81611876565b92915050565b6000602082840312156118b8576118b76117b0565b5b60006118c68482850161188d565b91505092915050565b6118d8816117d5565b82525050565b60006020820190506118f360008301846118cf565b92915050565b600060608201905061190e6000830186611786565b61191b602083018561184c565b611928604083018461184c565b949350505050565b600060c082019050611945600083018961184c565b611952602083018861184c565b61195f6040830187611786565b61196c6060830186611786565b6119796080830185611786565b61198660a0830184611786565b979650505050505050565b600080604083850312156119a8576119a76117b0565b5b60006119b6858286016117fe565b92505060206119c78582860161188d565b9150509250929050565b600082825260208201905092915050565b7f53616c65206e6f742066696e616c697a65640000000000000000000000000000600082015250565b6000611a186012836119d1565b9150611a23826119e2565b602082019050919050565b60006020820190508181036000830152611a4781611a0b565b9050919050565b7f53616c6520776173206e6f74207375636365737366756c000000000000000000600082015250565b6000611a846017836119d1565b9150611a8f82611a4e565b602082019050919050565b60006020820190508181036000830152611ab381611a77565b9050919050565b7f4e6f2066756e647320746f207769746864726177000000000000000000000000600082015250565b6000611af06014836119d1565b9150611afb82611aba565b602082019050919050565b60006020820190508181036000830152611b1f81611ae3565b9050919050565b600081905092915050565b50565b6000611b41600083611b26565b9150611b4c82611b31565b600082019050919050565b6000611b6282611b34565b9150819050919050565b7f5769746864726177616c206661696c6564000000000000000000000000000000600082015250565b6000611ba26011836119d1565b9150611bad82611b6c565b602082019050919050565b60006020820190508181036000830152611bd181611b95565b9050919050565b7f53616c6520616c72656164792066696e616c697a656400000000000000000000600082015250565b6000611c0e6016836119d1565b9150611c1982611bd8565b602082019050919050565b60006020820190508181036000830152611c3d81611c01565b9050919050565b7f53616c6520706572696f64206e6f7420656e64656420616e642068617264206360008201527f6170206e6f742072656163686564000000000000000000000000000000000000602082015250565b6000611ca0602e836119d1565b9150611cab82611c44565b604082019050919050565b60006020820190508181036000830152611ccf81611c93565b9050919050565b7f53616c6520776173207375636365737366756c2c206e6f20726566756e647300600082015250565b6000611d0c601f836119d1565b9150611d1782611cd6565b602082019050919050565b60006020820190508181036000830152611d3b81611cff565b9050919050565b7f4e6f20636f6e747269627574696f6e20666f756e640000000000000000000000600082015250565b6000611d786015836119d1565b9150611d8382611d42565b602082019050919050565b60006020820190508181036000830152611da781611d6b565b9050919050565b7f416c726561647920726566756e64656400000000000000000000000000000000600082015250565b6000611de46010836119d1565b9150611def82611dae565b602082019050919050565b60006020820190508181036000830152611e1381611dd7565b9050919050565b7f4e6f20726566756e6420617661696c61626c6500000000000000000000000000600082015250565b6000611e506013836119d1565b9150611e5b82611e1a565b602082019050919050565b60006020820190508181036000830152611e7f81611e43565b9050919050565b7f526566756e64207472616e73666572206661696c656400000000000000000000600082015250565b6000611ebc6016836119d1565b9150611ec782611e86565b602082019050919050565b60006020820190508181036000830152611eeb81611eaf565b9050919050565b7f53616c6520616c726561647920616374697665206f722066696e616c697a6564600082015250565b6000611f286020836119d1565b9150611f3382611ef2565b602082019050919050565b60006020820190508181036000830152611f5781611f1b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f988261177c565b9150611fa38361177c565b9250828201905080821115611fbb57611fba611f5e565b5b92915050565b6000604082019050611fd66000830185611786565b611fe36020830184611786565b9392505050565b7f53616c65206e6f74207374617274656400000000000000000000000000000000600082015250565b60006120206010836119d1565b915061202b82611fea565b602082019050919050565b6000602082019050818103600083015261204f81612013565b9050919050565b7f53616c6520656e64656400000000000000000000000000000000000000000000600082015250565b600061208c600a836119d1565b915061209782612056565b602082019050919050565b600060208201905081810360008301526120bb8161207f565b9050919050565b7f4861726420636170207265616368656400000000000000000000000000000000600082015250565b60006120f86010836119d1565b9150612103826120c2565b602082019050919050565b60006020820190508181036000830152612127816120eb565b9050919050565b7f42656c6f77206d696e696d756d20636f6e747269627574696f6e000000000000600082015250565b6000612164601a836119d1565b915061216f8261212e565b602082019050919050565b6000602082019050818103600083015261219381612157565b9050919050565b7f416c726561647920636f6e747269627574656400000000000000000000000000600082015250565b60006121d06013836119d1565b91506121db8261219a565b602082019050919050565b600060208201905081810360008301526121ff816121c3565b9050919050565b7f45786365656473206d6178696d756d20636f6e747269627574696f6e00000000600082015250565b600061223c601c836119d1565b915061224782612206565b602082019050919050565b6000602082019050818103600083015261226b8161222f565b9050919050565b7f576f756c64206578636565642068617264206361700000000000000000000000600082015250565b60006122a86015836119d1565b91506122b382612272565b602082019050919050565b600060208201905081810360008301526122d78161229b565b9050919050565b60006122e98261177c565b91506122f48361177c565b925082820390508181111561230c5761230b611f5e565b5b92915050565b7f53616c65206e6f74207375636365737366756c6c792066696e616c697a656400600082015250565b6000612348601f836119d1565b915061235382612312565b602082019050919050565b600060208201905081810360008301526123778161233b565b9050919050565b7f4e6f20636f6e747269627574696f6e7300000000000000000000000000000000600082015250565b60006123b46010836119d1565b91506123bf8261237e565b602082019050919050565b600060208201905081810360008301526123e3816123a7565b9050919050565b60006123f58261177c565b91506124008361177c565b925082820261240e8161177c565b9150828204841483151761242557612424611f5e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006124668261177c565b91506124718361177c565b9250826124815761248061242c565b5b828204905092915050565b60006040820190506124a1600083018561184c565b6124ae6020830184611786565b939250505056fea264697066735822122086d76862fca8bad011249ebe0704176fd870e47f2af3025e99aaad9c2604161564736f6c63430008140033",
  "devdoc": {
    "details": "Presale contract for Backroom token with ETH contributions",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "calculateTokenAllocation(address,uint256)": {
        "details": "Calculate token allocation for a contributor (view only, for off-chain reference)",
        "params": {
          "_contributor": "Address to calculate for",
          "_totalTokensAllocated": "Total tokens allocated to presale (e.g., 5% of supply)"
        }
      },
      "claimRefund()": {
        "details": "Claim refund if sale failed (contributors only)"
      },
      "deposit()": {
        "details": "Contribute ETH to the presale"
      },
      "finalizeSale()": {
        "details": "Finalize the sale after 24 hours or when hard cap is reached"
      },
      "getContributionInfo(address)": {
        "details": "Get contribution info for an address"
      },
      "getSaleInfo()": {
        "details": "Get sale status information"
      },
      "getTimeRemaining()": {
        "details": "Get time remaining in sale"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "startSale()": {
        "details": "Start the presale (admin only)"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdrawFunds()": {
        "details": "Withdraw raised funds if sale was successful (admin only)"
      }
    },
    "title": "BackroomPresale",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 188,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 257,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 259,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 261,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "minContribution",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 263,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "maxContribution",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 265,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleStartTime",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 267,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleEndTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 269,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "totalRaised",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 271,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleFinalized",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 273,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "saleSuccessful",
        "offset": 1,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 280,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "contributions",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 284,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hasContributed",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 288,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "hasRefunded",
        "offset": 0,
        "slot": "12",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 291,
        "contract": "contracts/Presale.sol:BackroomPresale",
        "label": "contributors",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}